{"version":3,"sources":["context/NetworkContext.js","context/WalletContext.js","component/logo/ledgerLogo.svg","headerLogo.png","context/LedgerController.js","context/LedgerContext.js","component/form/SectionHeader.js","component/form/FormTextField.js","header/CustomNodeForm.js","context/FactomCliContext.js","header/HelpModal.js","header/Header.js","withRootTheme.js","constants/WALLET_CONSTANTS.js","utils.js","context/WalletController.js","context/SeedContext.js","context/SeedController.js","context/FactomCliController.js","context/NetworkController.js","Disclaimer.js","TestnetWarningBar.js","addWallet/ImportTypeForm.js","addWallet/ImportFctForm.js","addWallet/ImportEcForm.js","addWallet/NewSeedForm.js","walletManager/shared/BalanceFormatter.js","addWallet/GenerateAddressTable.js","addWallet/LedgerForm.js","addWallet/SeedForm.js","addWallet/ImportSeedForm.js","addWallet/AddWalletStepContent.js","addWallet/AddWalletStepper.js","addWallet/AddWalletModal.js","walletManager/Sidebar.js","walletManager/SendTransactionPreview.js","component/logo/SVGLogo.js","walletManager/shared/AddressInfoHeader.js","walletManager/shared/TransactionMessage.js","walletManager/SendFactoidForm.js","walletManager/ConvertTransactionPreview.js","walletManager/ConvertECForm.js","walletManager/ViewPrivateKeyForm.js","walletManager/AddressInfoForm.js","walletManager/TransactionList.js","walletManager/AddressInfoTab.js","walletManager/WalletTabContent.js","walletManager/WalletManager.js","addWallet/AddInitialWallet.js","AppRouter.js","App.js","registerServiceWorker.js","index.js"],"names":["NetworkContext","React","createContext","withNetwork","BaseComponent","props","Consumer","networkController","WalletContext","withWalletContext","walletController","module","exports","BIP_32_COIN_TYPES","fct","ec","identity","LedgerController","Component","constructor","super","getLedgerAddresses","startIndex","amount","type","a","result","bip32Account","networkProps","coinType","TransportWebUSB","create","transport","ledger","Fct","index","path","getAddress","address_o","push","address","close","signTransaction","fromAddr","toAddr","signedTX","Transaction","builder","getFactoshiFee","unsignedTX","input","output","build","marshalBinarySig","toString","rcdSignature","Buffer","from","checkAddress","activeFctWallet","console","error","this","state","render","Provider","value","children","enhancer","_flowRight","LedgerContext","withLedger","ledgerController","SectionHeader","disableGutterBottom","text","color","textColor","Typography","gutterBottom","variant","style","withStyles","theme","errorText","fontSize","textAlign","accept","autoComplete","autoFocus","classes","disabled","displayError","fullWidth","isNotFast","label","maxLength","multiline","name","onChange","onBlur","onKeyPress","margin","placeholder","shrink","spellCheck","step","validate","width","dataCy","FieldType","Field","FastField","field","TextField","inputProps","InputLabelProps","data-cy","msg","className","handleKeyPress","event","target","which","preventDefault","initialValues","host","port","onSubmit","values","actions","handleCustomNode","validationSchema","Yup","shape","required","isSubmitting","errors","touched","id","Button","FactomCliContext","withFactomCli","factomCliController","modalContent","position","boxShadow","shadows","top","left","transform","minHeight","padding","maxWidth","menuText","useState","isOpen","setOpen","onClick","Modal","aria-labelledby","open","onClose","Paper","elevation","rel","href","Header","networkAnchorEl","openCustomNodeForm","handleOpenCustomNodeForm","setState","handleCloseCustomNodeForm","handleNetworkClick","currentTarget","handleNetworkClose","handleTestnet","handleNetworkChange","handleMainnet","handleWallet","readyToManageWallet","isWalletEmpty","setReadyToManageWallet","isConnected","blockHeight","greenConnection","testnetActive","network","AppBar","root","Toolbar","toolbar","IconButton","menuButton","aria-label","Link","to","logo","src","alt","flex","testnetHeader","aria-owns","aria-haspopup","e","titleAccess","connected","notConnected","Menu","anchorEl","Boolean","MenuItem","aria-describedby","flexGrow","marginBottom","marginTop","marginRight","subMenuText","spacing","backgroundColor","palette","background","paper","createMuiTheme","typography","body1","lineHeight","letterSpacing","withRootTheme","CssBaseline","FACTOID_REGEX","toFactoshis","factoids","factoshis","Big","times","parseFloat","toFactoids","addBig","x","y","sum","plus","minusBig","diff","minus","LOCAL_STORAGE_PROPERTY_WHITELIST","WalletController","smartSetState","newState","afterSetState","_noop","Promise","resolve","_flow","saveStateToLocalStorage","filterArray","addressArray","filter","saveLocally","map","_pick","addresses","mainnet","testnet","storageAddresses","localStorage","setItem","JSON","stringify","hydrateStateWithLocalStorage","localStorageAddresses","parse","getItem","_isNil","localStorageToWalletAddresses","addr_o","balance","transactions","pendingAddressCallback","pendingTransaction","pendingTransactionListener","factoidAddressList","testoidAddressList","prevState","setDefaultIndex","updateBalances","force","addNetworkPendingTransactionListeners","isStateHydrated","addressList","length","addPendingTransactionEmitter","removeNetworkPendingTransactionListeners","removePendingTransactionEmitter","changeNetwork","connectToServer","deleteAddress","activeAddressIndex_o","splice","addAddressTransaction","transactionID","updateAddress","nickname","_isEmpty","getFactoidAddresses","getEntryCreditAddresses","selectAddress","verifyKey","privateKey","getPublicAddress","valueOf","err","addAddress","addAddresses","getNextIndex","getActiveAddress","getAddresses","updateWalletBalance","wallet","factomCli","getBalance","forEach","factomEmitter","on","FactomEventEmitter","getSubscriptionToken","eventType","topic","removeListener","pendingAddress","factoidWallet","entries","updatedAddress","all","factoidAddresses","ecAddresses","getEntryCreditRate","ecRate","exampleAddress","fee","Number","MAX_SAFE_INTEGER","computeRequiredFees","rcdType","getFactoidFee","factoshiFee","newStandardAddress","importType","newSeedAddress","newLedgerAddress","componentDidMount","SeedContext","withSeed","seedController","keyToFctAddress","key","seedToPrivateFctAddress","keyToECAddress","seedToPrivateEcAddress","SeedController","getSeedAddresses","mnemonic","factombip44","FactomBIP44","generateFactoidPrivateKey","generateEntryCreditPrivateKey","signWithSeed","createFactoidTransaction","createEntryCreditPurchaseTransaction","verifySeed","derivedAddress","isValidPublicFctAddress","isValidPublicEcAddress","getPrivateKey","getRandomMnemonic","randomMnemonic","FactomCliController","defaultConnectionParams","debugPath","protocol","rejectUnauthorized","retry","retries","factor","minTimeout","maxTimeout","getDefaultConnectionParams","connectionParams","apiHost","apiPort","defaultsDeep","newFactomCli","FactomCli","newFactomEmitter","interval","updateBlock","directoryBlock","height","factomdApi","timeout","getDirectoryBlockHead","directoryBlockHead","log","Grid","container","item","xs","justify","NetworkController","factoidAbbreviation","factoidAbbreviationFull","ecAbbreviation","ecAbbreviationFull","explorerURL","transactionUrlSuffix","ConfirmationDialogRaw","handleClose","other","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","align","DialogContent","DialogActions","ConfirmationDialog","appBar","bottom","paddingTop","marginLeft","warningIcon","toolbarSpace","handleNext","handleChange","FormControl","_get","component","FormLabel","RadioGroup","updateImportType","getImportTypes","option","FormControlLabel","control","Radio","factoidAddress","fctAddress_o","get","trim","test","findIndex","handleBack","entryCreditAddress","ecAddress_o","NewSeedForm","nextStep","setMnemonic","oneOf","fontWeight","warningText","FormatFCTBalance","factoidBalance","parseInt","toLocaleString","undefined","maximumFractionDigits","FormatECBalance","entryCreditBalance","FormatBalance","useContext","CustomCell","head","paddingLeft","paddingRight","body","TableCell","overflowX","maxHeight","common","black","white","errorTextSmall","loading","setLoading","validateNickname","userAddressNicknames","userAddressList","indexOf","getNextFive","generatedAddressList","setFieldValue","title","userAddresses","Table","size","TableHead","TableRow","TableBody","checkboxPath","nicknamePath","duplicate","arrayHelpers","Tooltip","Checkbox","checked","labelPlacement","form","replace","find","newAddress","addGeneratedAddress","CircularProgress","thickness","TableFooter","getTitle","LedgerForm","retryConnection","ledgerStatus","ledgerConnected","hasAddressSelected","formValues","Object","keys","startsWith","some","enableReinitialize","validAddresses","setGeneratedAddressList","count","setCount","prevCount","useEffect","fetchAddresses","newAddressList","fetchData","ImportSeedForm","validMnemonic","AddWalletStepContent","activeStep","getStandardSteps","getSeedAddressSteps","stepMap","importSeed","new","FinalStep","testnetWarning","stepper","minWidth","borderColor","borderStyle","display","setActiveStep","setImportType","getSteps","setGetSteps","handleReset","handleCloseText","steps","sectionHeaderText","Stepper","labelProps","Step","StepLabel","button","center","StyledAddressIcon","ledgerLogo","opacity","sidebarIcon","iconContainer","noPadding","break","wordWrap","expanded","listAddrRoot","overflow","addressSummary","addressHeading","walletList","walletListHeader","paddingBottom","borderRadius","addressContainer","listfactoidAddresses","nicknameStyle","ExpansionPanel","ExpansionPanelSummary","listecAddresses","List","ListItem","disableGutters","transferFactoidAmountText","transferFactoidUnitText","factoidAmountSmallText","detail","divider","border","factoidAmount","sendFactoshiFee","sendFactoidFee","totalFactoidAmount","totalFactoidAmountText","feeFactoidAmountText","SVGLogo","pointer","cursor","logoBackground","bold","activeAddress_o","SvgIcon","d","LedgerLogo","MainnetMessage","TestnetMessage","TransactionMessage","SendFactoidForm","insufficientFundsMessage","getMaxFactoshis","maxFactoshis","seed","maxAmount","sendFactoidAmount","recipientAddress","myFctWalletAnchorEl","transactionError","addressToReinitialize","transaction","seedTrans_o","ledgerTrans_o","sendTransaction","txId","resetForm","typeError","positive","match","max","when","is","then","otherwise","notRequired","isValid","FactoidAddressMenu","transactionErrorText","nativeColor","successIcon","sendButton","convertECAmountText","ecUnitText","factoidCostSmallText","ecAmount","totalFactoidCostText","ConvertECForm","getMaxEC","maxEntryCredits","div","divideBig","entryCreditAmount","Math","round","integer","ECAddressMenu","deleteButton","deleteConfirmationText","icon","textAlignLeft","fab","pushDown","window","setTimeout","submitForm","handleBlur","Fab","overflowWrap","AddressInfoTab","TabContainer","tabContainer","tabValue","setTabValue","activeAddress","activeTab","Tabs","indicatorColor","centered","Tab","md","AddInitialWallet","Switch","Route","App","Disclaimer","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81b8c163.chunk.js","sourcesContent":["import React from 'react';\n\nconst NetworkContext = React.createContext();\n\nconst withNetwork = (BaseComponent) => (props) => (\n\t<NetworkContext.Consumer>\n\t\t{(networkController) => (\n\t\t\t<BaseComponent {...props} networkController={networkController} />\n\t\t)}\n\t</NetworkContext.Consumer>\n);\n\nexport { NetworkContext, withNetwork };\n","import React from 'react';\n\nconst WalletContext = React.createContext();\n\nconst withWalletContext = (BaseComponent) => (props) => (\n\t<WalletContext.Consumer>\n\t\t{(walletController) => (\n\t\t\t<BaseComponent {...props} walletController={walletController} />\n\t\t)}\n\t</WalletContext.Consumer>\n);\n\nexport { WalletContext, withWalletContext };\n","module.exports = __webpack_public_path__ + \"static/media/ledgerLogo.e1222cef.svg\";","module.exports = __webpack_public_path__ + \"static/media/headerLogo.e79a5c9c.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _flowRight from 'lodash/flowRight';\nimport { LedgerContext } from './LedgerContext';\nimport TransportWebUSB from '@ledgerhq/hw-transport-webusb';\nimport Fct from '@factoid.org/hw-app-fct';\nimport { withNetwork } from '../context/NetworkContext';\nimport { withWalletContext } from '../context/WalletContext';\nimport { Transaction } from 'factom/dist/factom';\n/**\n * Constants\n */\nconst BIP_32_COIN_TYPES = { fct: 131, ec: 132, identity: 281 };\n\nclass LedgerController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tgetLedgerAddresses: this.getLedgerAddresses,\n\t\t\tsignTransaction: this.signTransaction,\n\t\t\tcheckAddress: this.checkAddress,\n\t\t};\n\t}\n\n\tgetLedgerAddresses = async (startIndex, amount, type) => {\n\t\tconst result = [];\n\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst coinType = BIP_32_COIN_TYPES[type];\n\n\t\tconst transport = await TransportWebUSB.create();\n\t\tconst ledger = new Fct(transport);\n\n\t\tfor (let index = startIndex; index < startIndex + amount; index++) {\n\t\t\tconst path = \"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + index;\n\t\t\tconst address_o = await ledger.getAddress(path);\n\n\t\t\tresult.push({ address: address_o.address });\n\t\t}\n\n\t\ttransport.close();\n\n\t\treturn result;\n\t};\n\n\tsignTransaction = async ({ fromAddr, toAddr, amount, index }) => {\n\t\tlet signedTX = {};\n\t\tlet transport = await TransportWebUSB.create();\n\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst path = \"44'/131'/\" + bip32Account + \"'/0/\" + index;\n\n\t\tconst ledger = new Fct(transport);\n\n\t\tconst unsignedTX = Transaction.builder()\n\t\t\t.input(\n\t\t\t\tfromAddr,\n\t\t\t\tamount + (await this.props.walletController.getFactoshiFee())\n\t\t\t)\n\t\t\t.output(toAddr, amount)\n\t\t\t.build();\n\n\t\tconst result = await ledger.signTransaction(\n\t\t\tpath,\n\t\t\tunsignedTX.marshalBinarySig.toString('hex')\n\t\t);\n\n\t\tif (result) {\n\t\t\tsignedTX = Transaction.builder(unsignedTX)\n\t\t\t\t.rcdSignature(\n\t\t\t\t\tBuffer.from(result['r'], 'hex'),\n\t\t\t\t\tBuffer.from(result['s'], 'hex')\n\t\t\t\t)\n\t\t\t\t.build();\n\t\t}\n\t\ttransport.close();\n\t\treturn signedTX;\n\t};\n\n\tcheckAddress = async (activeFctWallet, type) => {\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst coinType = BIP_32_COIN_TYPES[type];\n\n\t\tconst path =\n\t\t\t\"44'/\" + coinType + \"'/\" + bip32Account + \"'/0/\" + activeFctWallet.index;\n\n\t\ttry {\n\t\t\tvar transport = await TransportWebUSB.create();\n\n\t\t\tconst ledger = new Fct(transport);\n\n\t\t\tawait ledger.getAddress(path, true);\n\n\t\t\ttransport.close();\n\t\t} catch (err) {\n\t\t\tconsole.error('Failed getFctAddr from Ledger Nano X/S :', err);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<LedgerContext.Provider value={this.state}>\n\t\t\t\t{this.props.children}\n\t\t\t</LedgerContext.Provider>\n\t\t);\n\t}\n}\n\nLedgerController.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n};\n\nconst enhancer = _flowRight(withWalletContext, withNetwork);\n\nexport default enhancer(LedgerController);\n","import React from 'react';\n\nconst LedgerContext = React.createContext();\n\nconst withLedger = (BaseComponent) => (props) => (\n\t<LedgerContext.Consumer>\n\t\t{(ledgerController) => (\n\t\t\t<BaseComponent {...props} ledgerController={ledgerController} />\n\t\t)}\n\t</LedgerContext.Consumer>\n);\n\nexport { LedgerContext, withLedger };\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nfunction SectionHeader({ disableGutterBottom, text, color }) {\n\tconst textColor = {\n\t\tcolor: color ? color : null,\n\t};\n\n\treturn (\n\t\t<Typography\n\t\t\tgutterBottom={!disableGutterBottom}\n\t\t\tvariant=\"h6\"\n\t\t\tstyle={textColor}\n\t\t>\n\t\t\t{text}\n\t\t</Typography>\n\t);\n}\n\nexport default SectionHeader;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Field, FastField, ErrorMessage } from 'formik';\n\nconst FormTextField = ({\n\taccept,\n\tautoComplete = false,\n\tautoFocus,\n\tclasses,\n\tdisabled = false,\n\tdisplayError = true,\n\terror = false,\n\tfullWidth = false,\n\tisNotFast,\n\tlabel,\n\tmaxLength,\n\tmultiline,\n\tname,\n\tonChange,\n\tonBlur,\n\tonKeyPress,\n\tmargin,\n\tplaceholder,\n\tshrink = false,\n\tspellCheck = false,\n\tstep = false,\n\ttype = 'text',\n\tvalidate,\n\twidth,\n\tdataCy = 'formTextField',\n}) => {\n\tconst FieldType = isNotFast ? Field : FastField;\n\treturn (\n\t\t<>\n\t\t\t<FieldType name={name} {...(validate ? { validate } : {})}>\n\t\t\t\t{({ field }) => (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t{...(onChange ? { onChange } : {})}\n\t\t\t\t\t\t{...(onBlur ? { onBlur } : {})}\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tautoFocus,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\tdisabled,\n\t\t\t\t\t\t\tfullWidth,\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\tplaceholder,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tmultiline,\n\t\t\t\t\t\t\tonKeyPress,\n\t\t\t\t\t\t\tmargin,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tautoComplete: autoComplete ? 'on' : 'off',\n\t\t\t\t\t\t\tmaxLength,\n\t\t\t\t\t\t\tspellCheck,\n\t\t\t\t\t\t\t...(accept ? { accept } : {}),\n\t\t\t\t\t\t\t...(step ? { step } : {}),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{ width }}\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t...(shrink ? { shrink } : {}),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdata-cy={dataCy}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</FieldType>\n\t\t\t{displayError && (\n\t\t\t\t<ErrorMessage\n\t\t\t\t\tname={name}\n\t\t\t\t\trender={(msg) => <div className={classes.errorText}>{msg}</div>}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '13px', textAlign: 'left' },\n});\n\nexport default withStyles(styles)(FormTextField);\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport SectionHeader from '../component/form/SectionHeader';\nimport FormTextField from '../component/form/FormTextField';\n\nconst hostPath = 'host';\nconst portPath = 'port';\n\nfunction CustomNodeForm(props) {\n\tfunction handleKeyPress(event) {\n\t\tif (event.target.type !== 'textarea' && event.which === 13 /* Enter */) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ host: '', port: '' }}\n\t\t\tonSubmit={(values, actions) => {\n\t\t\t\tprops.handleCustomNode(values[hostPath], values[portPath]);\n\t\t\t}}\n\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t[hostPath]: Yup.string().required('Required'),\n\t\t\t\t[portPath]: Yup.string().required('Required'),\n\t\t\t})}\n\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t<Form onKeyPress={handleKeyPress}>\n\t\t\t\t\t<SectionHeader text=\"Custom Node Form\" id=\"modal-title\" />\n\t\t\t\t\t<FormTextField\n\t\t\t\t\t\terror={errors[hostPath] && touched[hostPath] ? true : false}\n\t\t\t\t\t\tname={hostPath}\n\t\t\t\t\t\tlabel=\"Host\"\n\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormTextField\n\t\t\t\t\t\terror={errors[portPath] && touched[portPath] ? true : false}\n\t\t\t\t\t\tname={portPath}\n\t\t\t\t\t\tlabel=\"Port\"\n\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t/>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t/>\n\t);\n}\n\nCustomNodeForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\nexport default withStyles(styles)(CustomNodeForm);\n","import React from 'react';\n\nconst FactomCliContext = React.createContext();\n\nconst withFactomCli = (BaseComponent) => (props) => (\n\t<FactomCliContext.Consumer>\n\t\t{(factomCliController) => (\n\t\t\t<BaseComponent {...props} factomCliController={factomCliController} />\n\t\t)}\n\t</FactomCliContext.Consumer>\n);\n\nexport { FactomCliContext, withFactomCli };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport SectionHeader from '../component/form/SectionHeader';\n\nfunction HelpModal(props) {\n\tconst classes = props.classes;\n\tconst [isOpen, setOpen] = useState(false);\n\n\treturn (\n\t\t<>\n\t\t\t<Button className={classes.menuText} onClick={() => setOpen(true)}>\n\t\t\t\tHelp\n\t\t\t</Button>\n\t\t\t<Modal\n\t\t\t\taria-labelledby=\"modal-title\"\n\t\t\t\topen={isOpen}\n\t\t\t\tonClose={() => setOpen(false)}\n\t\t\t>\n\t\t\t\t<Paper className={classes.modalContent} elevation={2}>\n\t\t\t\t\t<SectionHeader text=\"Help\" id=\"modal-title\" />\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tPlease go to the #myfactomwallet channel on{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\thref={'https://discord.gg/79kH2pp'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDiscord\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t&nbsp;for support.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tLedger Nano X/S documentation can be found{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\thref={'http://help.myfactomwallet.com/'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tMyFactomWallet's Github repositories are{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\thref={'https://github.com/MyFactomWallet'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t.\n\t\t\t\t\t</Typography>\n\t\t\t\t</Paper>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\nHelpModal.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tmodalContent: {\n\t\tposition: 'absolute',\n\t\tboxShadow: theme.shadows[5],\n\t\ttop: `50%`,\n\t\tleft: `50%`,\n\t\ttransform: `translate(-50%, -50%)`,\n\t\tminHeight: '138px',\n\t\tpadding: '30px',\n\t\tmaxWidth: '425px',\n\t},\n\tmenuText: {\n\t\tcolor: 'white',\n\t},\n});\n\nexport default withStyles(styles)(HelpModal);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport logo from '../headerLogo.png';\nimport { Link } from 'react-router-dom';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\nimport CustomNodeForm from './CustomNodeForm';\nimport Modal from '@material-ui/core/Modal';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport { withFactomCli } from '../context/FactomCliContext';\nimport HelpModal from './HelpModal';\n\nclass Header extends React.Component {\n\tstate = {\n\t\tnetworkAnchorEl: null,\n\t\topenCustomNodeForm: false,\n\t};\n\n\thandleOpenCustomNodeForm = () => {\n\t\tthis.setState({ openCustomNodeForm: true });\n\t};\n\n\thandleCloseCustomNodeForm = () => {\n\t\tthis.setState({ openCustomNodeForm: false });\n\t};\n\n\thandleNetworkClick = (event) => {\n\t\tthis.setState({ networkAnchorEl: event.currentTarget });\n\t};\n\n\thandleNetworkClose = () => {\n\t\tthis.setState({ networkAnchorEl: null });\n\t};\n\n\thandleTestnet = () => {\n\t\tthis.setState({\n\t\t\tnetworkAnchorEl: null,\n\t\t});\n\t\tthis.props.walletController.handleNetworkChange('testnet');\n\t};\n\n\thandleMainnet = () => {\n\t\tthis.setState({\n\t\t\tnetworkAnchorEl: null,\n\t\t});\n\t\tthis.props.walletController.handleNetworkChange('mainnet');\n\t};\n\n\thandleWallet = () => {\n\t\tif (\n\t\t\t!this.props.walletController.readyToManageWallet &&\n\t\t\t!this.props.walletController.isWalletEmpty()\n\t\t) {\n\t\t\tthis.props.walletController.setReadyToManageWallet(true);\n\t\t}\n\t};\n\n\thandleCustomNode = (host, port) => {\n\t\t/* this.setState({\n\t\t\tnetwork: host + ':' + port,\n\t\t}); */\n\t\tthis.handleCloseCustomNodeForm();\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tnetworkController: { networkProps },\n\t\t\tfactomCliController: { isConnected, error, blockHeight },\n\t\t\tdisabled,\n\t\t\tgreenConnection,\n\t\t} = this.props;\n\t\tconst { networkAnchorEl } = this.state;\n\n\t\tconst testnetActive = networkProps.network === 'testnet';\n\n\t\treturn (\n\t\t\t<AppBar position=\"static\" className={classes.root} data-cy=\"appBarHeader\">\n\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"Menu\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t<img className={classes.logo} src={logo} alt=\"logo\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.flex}>\n\t\t\t\t\t\t<Link className={classes.menuText} to=\"/\">\n\t\t\t\t\t\t\tMyFactomWallet\n\t\t\t\t\t\t\t{testnetActive && (\n\t\t\t\t\t\t\t\t<span className={classes.testnetHeader} data-cy=\"testnetHeader\">\n\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;TESTNET\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (!disabled) this.handleWallet();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName={classes.menuText}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tWallet\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Link>\n\n\t\t\t\t\t<HelpModal />\n\t\t\t\t\t<Button\n\t\t\t\t\t\taria-owns={networkAnchorEl ? 'simple-anchor-menu' : null}\n\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tif (!disabled) this.handleNetworkClick(e);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={testnetActive ? classes.testnetHeader : classes.menuText}\n\t\t\t\t\t>\n\t\t\t\t\t\t{blockHeight ? (\n\t\t\t\t\t\t\t<span data-cy=\"blockHeight\">{blockHeight}</span>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div style={{ width: 48 }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t{(isConnected && !error) || greenConnection ? (\n\t\t\t\t\t\t\t<FiberManualRecord\n\t\t\t\t\t\t\t\ttitleAccess=\"Network Operational\"\n\t\t\t\t\t\t\t\tclassName={classes.connected}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t?&nbsp;\n\t\t\t\t\t\t\t\t<FiberManualRecord\n\t\t\t\t\t\t\t\t\ttitleAccess=\"Network Unavailable\"\n\t\t\t\t\t\t\t\t\tclassName={classes.notConnected}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tid=\"simple-anchor-menu\"\n\t\t\t\t\t\tanchorEl={networkAnchorEl}\n\t\t\t\t\t\topen={Boolean(networkAnchorEl)}\n\t\t\t\t\t\tonClose={this.handleNetworkClose}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem onClick={this.handleMainnet} disabled={!testnetActive}>\n\t\t\t\t\t\t\tConnect to Mainnet\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem onClick={this.handleTestnet} disabled={testnetActive}>\n\t\t\t\t\t\t\tConnect to Testnet\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t{/* <MenuItem\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.handleNetworkClose();\n\t\t\t\t\t\t\t\t\tthis.handleOpenCustomNodeForm();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCustom Node\n\t\t\t\t\t\t\t</MenuItem> */}\n\t\t\t\t\t</Menu>\n\t\t\t\t\t<Modal\n\t\t\t\t\t\taria-labelledby=\"simple-modal-title\"\n\t\t\t\t\t\taria-describedby=\"simple-modal-description\"\n\t\t\t\t\t\topen={this.state.openCustomNodeForm}\n\t\t\t\t\t\tonClose={this.handleCloseCustomNodeForm}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={classes.modalContent}>\n\t\t\t\t\t\t\t<CustomNodeForm handleCustomNode={this.handleCustomNode} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Modal>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t);\n\t}\n}\nHeader.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tmarginBottom: '15px',\n\t},\n\ttoolbar: {\n\t\twidth: '90%',\n\t\tmargin: '0 auto',\n\t},\n\tflex: {\n\t\tflex: 1,\n\t},\n\tmenuButton: {\n\t\tmarginTop: 3,\n\t\tmarginRight: 10,\n\t},\n\tlogo: {\n\t\twidth: '39px',\n\t},\n\tmenuText: {\n\t\tcolor: 'white',\n\t},\n\n\tsubMenuText: {\n\t\tcolor: 'black',\n\t},\n\tmodalContent: {\n\t\tposition: 'absolute',\n\t\twidth: theme.spacing(50),\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(4),\n\t\ttop: `50%`,\n\t\tleft: `50%`,\n\t\ttransform: `translate(-50%, -50%)`,\n\t},\n\ttestnetHeader: { color: '#ffa000' },\n\tconnected: { color: '#0ec30e' },\n\tnotConnected: { color: 'red' },\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithFactomCli,\n\twithWalletContext,\n\twithStyles(styles)\n);\nexport default enhancer(Header);\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst theme = createMuiTheme({\n\ttypography: {\n\t\tbody1: {\n\t\t\tfontSize: '0.875rem',\n\t\t\tlineHeight: 1.43,\n\t\t\tletterSpacing: '0.01071em',\n\t\t},\n\t},\n});\n\nfunction withRootTheme(Component) {\n\tfunction WithRoot(props) {\n\t\treturn (\n\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Component {...props} />\n\t\t\t</MuiThemeProvider>\n\t\t);\n\t}\n\n\treturn WithRoot;\n}\n\nexport default withRootTheme;\n","/**\n * Wallet constants\n */\nexport const FACTOID_MULTIPLIER = 100000000;\n\nexport const FACTOSHI_MULTIPLIER = 0.00000001;\n\nexport const ADDRESS_LENGTH = 52;\n\nexport const NICKNAME_MAX_LENGTH = 25;\n\nexport const DISABLE_AUTOCOMPLETE = {\n\tautoComplete: 'nope',\n\t// eslint-disable-next-line\n\tautoComplete: 'off',\n};\n\nexport const FACTOID_REGEX = /^\\d*[.]{0,1}\\d{0,8}$/;\n","import Big from 'big.js';\n\nimport {\n\tFACTOID_MULTIPLIER,\n\tFACTOSHI_MULTIPLIER,\n} from './constants/WALLET_CONSTANTS';\n\nexport const toFactoshis = (factoids) => {\n\tconst bigFactoids = new Big(factoids);\n\tconst factoshis = bigFactoids.times(FACTOID_MULTIPLIER);\n\n\treturn parseFloat(factoshis);\n};\n\nexport const toFactoids = (factoshis) => {\n\tconst bigFactoshis = new Big(factoshis);\n\tconst factoids = bigFactoshis.times(FACTOSHI_MULTIPLIER);\n\n\treturn parseFloat(factoids);\n};\n\nexport const addBig = (x, y) => {\n\tconst bigX = new Big(x);\n\tconst sum = bigX.plus(y);\n\n\treturn parseFloat(sum);\n};\n\nexport const minusBig = (x, y) => {\n\tconst bigX = new Big(x);\n\tconst diff = bigX.minus(y);\n\n\treturn parseFloat(diff);\n};\n\nexport const divideBig = (x, y) => {\n\tconst bigX = new Big(x);\n\tconst div = bigX.div(y);\n\n\treturn parseFloat(div);\n};\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _flow from 'lodash/flow';\nimport _isEmpty from 'lodash/isEmpty';\nimport _noop from 'lodash/noop';\nimport _isNil from 'lodash/isNil';\nimport _pick from 'lodash/pick';\nimport {\n\tTransaction,\n\tgetPublicAddress,\n\tFactomEventEmitter,\n} from 'factom/dist/factom';\n\nimport { WalletContext } from './WalletContext';\nimport { withFactomCli } from './FactomCliContext';\nimport { withNetwork } from './NetworkContext';\nimport { toFactoids } from '../utils';\n\n/**\n * Constants\n */\nconst LOCAL_STORAGE_KEY = 'storageAddresses';\nconst LOCAL_STORAGE_PROPERTY_WHITELIST = [\n\t'importType',\n\t'address',\n\t'nickname',\n\t'index',\n\t'saveLocally',\n];\n\nclass WalletController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\taddresses: {\n\t\t\t\tmainnet: {\n\t\t\t\t\tfct: [],\n\t\t\t\t\tec: [],\n\t\t\t\t},\n\t\t\t\ttestnet: {\n\t\t\t\t\tfct: [],\n\t\t\t\t\tec: [],\n\t\t\t\t},\n\t\t\t},\n\t\t\t//===================================================\n\t\t\tactiveAddressIndex_o: null,\n\t\t\tisStateHydrated: false,\n\t\t\treadyToManageWallet: false,\n\t\t\tsetReadyToManageWallet: this.setReadyToManageWallet,\n\t\t\tisWalletEmpty: this.isWalletEmpty,\n\t\t\thandleNetworkChange: this.handleNetworkChange,\n\t\t\tverifyKey: this.verifyKey,\n\t\t\tupdateAddress: this.updateAddress,\n\t\t\taddAddressTransaction: this.addAddressTransaction,\n\t\t\tdeleteAddress: this.deleteAddress,\n\t\t\tgetAddresses: this.getAddresses,\n\t\t\tgetFactoidAddresses: this.getFactoidAddresses,\n\t\t\tgetEntryCreditAddresses: this.getEntryCreditAddresses,\n\t\t\taddAddresses: this.addAddresses,\n\t\t\taddAddress: this.addAddress,\n\t\t\tselectAddress: this.selectAddress,\n\t\t\tgetActiveAddress: this.getActiveAddress,\n\t\t\tupdateWalletBalance: this.updateWalletBalance,\n\t\t\tupdateBalances: this.updateBalances,\n\t\t\tgetEntryCreditRate: this.getEntryCreditRate,\n\t\t\tgetFactoshiFee: this.getFactoshiFee,\n\t\t\tgetFactoidFee: this.getFactoidFee,\n\t\t\tnewStandardAddress: this.newStandardAddress,\n\t\t\tnewSeedAddress: this.newSeedAddress,\n\t\t\tnewLedgerAddress: this.newLedgerAddress,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\t//get from storage\n\t\tthis.hydrateStateWithLocalStorage();\n\t}\n\n\tsmartSetState = (newState, afterSetState = _noop) =>\n\t\tnew Promise((resolve) =>\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\n\t\t);\n\n\tsaveStateToLocalStorage = () => {\n\t\tconst filterArray = (addressArray) =>\n\t\t\taddressArray\n\t\t\t\t.filter((address) => address.saveLocally)\n\t\t\t\t.map((address) => _pick(address, LOCAL_STORAGE_PROPERTY_WHITELIST));\n\n\t\tconst { mainnet, testnet } = { ...this.state.addresses };\n\n\t\tconst storageAddresses = {\n\t\t\tmainnet: { fct: filterArray(mainnet.fct), ec: filterArray(mainnet.ec) },\n\t\t\ttestnet: { fct: filterArray(testnet.fct), ec: filterArray(testnet.ec) },\n\t\t};\n\n\t\tlocalStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storageAddresses));\n\t};\n\n\thydrateStateWithLocalStorage = async () => {\n\t\t// get local\n\t\tconst localStorageAddresses = JSON.parse(\n\t\t\tlocalStorage.getItem(LOCAL_STORAGE_KEY)\n\t\t);\n\n\t\tif (!_isNil(localStorageAddresses)) {\n\t\t\tconst localStorageToWalletAddresses = (addressArray) =>\n\t\t\t\taddressArray.map((addr_o) => ({\n\t\t\t\t\t...addr_o,\n\t\t\t\t\tbalance: null,\n\t\t\t\t\ttransactions: [],\n\t\t\t\t\tpendingAddressCallback: (pendingTransaction) => {\n\t\t\t\t\t\tthis.pendingTransactionListener(pendingTransaction, addr_o.address);\n\t\t\t\t\t},\n\t\t\t\t}));\n\n\t\t\tconst { mainnet, testnet } = localStorageAddresses;\n\t\t\tconst factoidAddressList = localStorageToWalletAddresses(mainnet.fct);\n\t\t\tconst testoidAddressList = localStorageToWalletAddresses(testnet.fct);\n\n\t\t\tconst storageAddresses = {\n\t\t\t\tmainnet: {\n\t\t\t\t\tfct: factoidAddressList,\n\t\t\t\t\tec: localStorageToWalletAddresses(mainnet.ec),\n\t\t\t\t},\n\t\t\t\ttestnet: {\n\t\t\t\t\tfct: testoidAddressList,\n\t\t\t\t\tec: localStorageToWalletAddresses(testnet.ec),\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tawait this.smartSetState((prevState) => ({\n\t\t\t\taddresses: storageAddresses,\n\t\t\t}));\n\n\t\t\tawait this.setDefaultIndex();\n\t\t\tawait this.updateBalances({ force: true });\n\n\t\t\tthis.addNetworkPendingTransactionListeners();\n\t\t}\n\t\tawait this.smartSetState({ readyToManageWallet: !this.isWalletEmpty() });\n\t\tawait this.smartSetState({ isStateHydrated: true });\n\t};\n\n\taddNetworkPendingTransactionListeners = () => {\n\t\tconst { network } = this.props.networkController.networkProps;\n\t\tconst addressList = [...this.state.addresses[network]['fct']];\n\n\t\tif (addressList.length > 0) {\n\t\t\tthis.addPendingTransactionEmitter(addressList);\n\t\t}\n\t};\n\n\tremoveNetworkPendingTransactionListeners = () => {\n\t\tconst { network } = this.props.networkController.networkProps;\n\t\tconst addressList = [...this.state.addresses[network]['fct']];\n\n\t\tif (addressList.length > 0) {\n\t\t\tthis.removePendingTransactionEmitter(addressList);\n\t\t}\n\t};\n\n\tsetReadyToManageWallet = (value) => {\n\t\tthis.smartSetState({\n\t\t\treadyToManageWallet: value,\n\t\t});\n\t};\n\n\thandleNetworkChange = async (network) => {\n\t\tthis.removeNetworkPendingTransactionListeners();\n\t\tawait this.smartSetState({ isStateHydrated: false });\n\t\tawait this.props.networkController.changeNetwork(network);\n\t\tawait this.props.factomCliController.connectToServer();\n\t\tthis.hydrateStateWithLocalStorage();\n\t};\n\n\tdeleteAddress = async (activeAddressIndex_o) => {\n\t\tconst type = activeAddressIndex_o.type;\n\t\tconst index = activeAddressIndex_o.index;\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t// create copy of current addressList\n\t\tconst addressList = [...this.state.addresses[network][type]];\n\t\tconst addr_o = addressList[index];\n\n\t\t//remove address\n\t\taddressList.splice(activeAddressIndex_o.index, 1);\n\n\t\t// overwrite addresses\n\t\tawait this.smartSetState((prevState) => ({\n\t\t\taddresses: {\n\t\t\t\t...prevState.addresses,\n\t\t\t\t[network]: {\n\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t[type]: [...addressList],\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\n\t\tawait this.setDefaultIndex();\n\n\t\tthis.saveStateToLocalStorage();\n\n\t\tthis.removePendingTransactionEmitter([addr_o]);\n\t};\n\n\taddAddressTransaction = (activeAddressIndex_o, transactionID) => {\n\t\tconst type = activeAddressIndex_o.type;\n\t\tconst index = activeAddressIndex_o.index;\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t// get address transaction list to update\n\t\tconst addressList = [...this.state.addresses[network][type]];\n\t\tconst addr_o = addressList[index];\n\n\t\t// add transaction\n\t\taddr_o.transactions.push(transactionID);\n\n\t\t// replace address\n\t\taddressList[activeAddressIndex_o.index] = addr_o;\n\n\t\t// overwrite addresses\n\t\treturn this.smartSetState((prevState) => ({\n\t\t\taddresses: {\n\t\t\t\t...prevState.addresses,\n\t\t\t\t[network]: {\n\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t[type]: [...addressList],\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\t};\n\n\tupdateAddress = async (activeAddressIndex_o, nickname, saveLocally) => {\n\t\tconst type = activeAddressIndex_o.type;\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t// create copy of current addressList\n\t\tconst addressList = [...this.state.addresses[network][type]];\n\n\t\t// create and update copy of current address\n\t\tconst addr_o = { ...addressList[activeAddressIndex_o.index] };\n\t\taddr_o.nickname = nickname;\n\t\taddr_o.saveLocally = saveLocally;\n\n\t\t// replace address\n\t\taddressList[activeAddressIndex_o.index] = addr_o;\n\n\t\t// overwrite addresses\n\t\tawait this.smartSetState((prevState) => ({\n\t\t\taddresses: {\n\t\t\t\t...prevState.addresses,\n\t\t\t\t[network]: {\n\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t[type]: [...addressList],\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\n\t\tthis.saveStateToLocalStorage();\n\t};\n\n\tisWalletEmpty = () => {\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\treturn (\n\t\t\t_isEmpty(this.state.addresses[network].fct) &&\n\t\t\t_isEmpty(this.state.addresses[network].ec)\n\t\t);\n\t};\n\n\tsetDefaultIndex = () => {\n\t\tif (!_isEmpty(this.getFactoidAddresses())) {\n\t\t\treturn this.selectAddress(0, 'fct');\n\t\t} else if (!_isEmpty(this.getEntryCreditAddresses())) {\n\t\t\treturn this.selectAddress(0, 'ec');\n\t\t} else {\n\t\t\treturn this.smartSetState({\n\t\t\t\tactiveAddressIndex_o: null,\n\t\t\t});\n\t\t}\n\t};\n\n\tverifyKey = (privateKey, { address }) => {\n\t\ttry {\n\t\t\t// for factom addresses\n\t\t\treturn getPublicAddress(privateKey).valueOf() === address.valueOf();\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\taddAddress = (address_o, type) => {\n\t\tthis.addAddresses([address_o], type);\n\n\t\tthis.selectAddress(this.getNextIndex(type), type);\n\t};\n\n\taddAddresses = async (addressList, type) => {\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\tawait this.smartSetState((prevState) => ({\n\t\t\taddresses: {\n\t\t\t\t...prevState.addresses,\n\t\t\t\t[network]: {\n\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t[type]: [...prevState.addresses[network][type], ...addressList],\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\t\tawait this.setDefaultIndex();\n\t\tawait this.updateBalances();\n\t\tthis.addPendingTransactionEmitter(addressList);\n\t};\n\n\tgetNextIndex = (type) => {\n\t\tlet index = 0;\n\t\tif (type === 'fct') {\n\t\t\tindex = this.getFactoidAddresses().length - 1;\n\t\t} else if (type === 'ec') {\n\t\t\tindex = this.getEntryCreditAddresses().length - 1;\n\t\t}\n\t\treturn index;\n\t};\n\n\tselectAddress = (index, type) => {\n\t\treturn this.smartSetState({\n\t\t\tactiveAddressIndex_o: { index, type },\n\t\t});\n\t};\n\n\tgetActiveAddress = () => {\n\t\tif (this.state.activeAddressIndex_o !== null) {\n\t\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t\treturn this.state.addresses[network][\n\t\t\t\tthis.state.activeAddressIndex_o.type\n\t\t\t][this.state.activeAddressIndex_o.index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tgetFactoidAddresses = () => {\n\t\treturn this.getAddresses('fct');\n\t};\n\n\tgetEntryCreditAddresses = () => {\n\t\treturn this.getAddresses('ec');\n\t};\n\n\tgetAddresses = (type) => {\n\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\treturn this.state.addresses[network][type];\n\t};\n\n\tupdateWalletBalance = async (wallet) => {\n\t\tconst balance = await this.props.factomCliController.factomCli.getBalance(\n\t\t\twallet.address\n\t\t);\n\n\t\treturn { ...wallet, balance };\n\t};\n\n\taddPendingTransactionEmitter = (addressList) => {\n\t\tif (addressList) {\n\t\t\taddressList.forEach((address_o) => {\n\t\t\t\tthis.props.factomCliController.factomEmitter.on(\n\t\t\t\t\tFactomEventEmitter.getSubscriptionToken({\n\t\t\t\t\t\teventType: 'newPendingTransaction',\n\t\t\t\t\t\ttopic: address_o.address,\n\t\t\t\t\t}),\n\t\t\t\t\taddress_o.pendingAddressCallback\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t};\n\n\tremovePendingTransactionEmitter = (addressList) => {\n\t\tif (addressList) {\n\t\t\taddressList.forEach((address_o) => {\n\t\t\t\tthis.props.factomCliController.factomEmitter.removeListener(\n\t\t\t\t\tFactomEventEmitter.getSubscriptionToken({\n\t\t\t\t\t\teventType: 'newPendingTransaction',\n\t\t\t\t\t\ttopic: address_o.address,\n\t\t\t\t\t}),\n\t\t\t\t\taddress_o.pendingAddressCallback\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t};\n\n\tpendingTransactionListener = async (pendingTransaction, pendingAddress) => {\n\t\tconst { network } = this.props.networkController.networkProps;\n\t\tconst factoidWallet = this.state.addresses[network].fct;\n\n\t\tfor (const [index, address_o] of factoidWallet.entries()) {\n\t\t\t// update wallet address if it has a pending transaction\n\t\t\tif (address_o.address === pendingAddress) {\n\t\t\t\tconst updatedAddress = await this.updateWalletBalance(address_o);\n\t\t\t\tfactoidWallet[index] = updatedAddress;\n\t\t\t}\n\t\t\tthis.smartSetState((prevState) => ({\n\t\t\t\taddresses: {\n\t\t\t\t\t...prevState.addresses,\n\t\t\t\t\t[network]: {\n\t\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t\tfct: factoidWallet,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}));\n\t\t}\n\t};\n\n\tupdateBalances = async ({ force = false } = {}) => {\n\t\tif (this.state.isStateHydrated || force) {\n\t\t\tconst { network } = this.props.networkController.networkProps;\n\n\t\t\tconst [factoidAddresses, ecAddresses] = await Promise.all([\n\t\t\t\tPromise.all(\n\t\t\t\t\tthis.state.addresses[network].fct.map(this.updateWalletBalance)\n\t\t\t\t),\n\t\t\t\tPromise.all(\n\t\t\t\t\tthis.state.addresses[network].ec.map(this.updateWalletBalance)\n\t\t\t\t),\n\t\t\t]);\n\n\t\t\treturn this.smartSetState((prevState) => ({\n\t\t\t\taddresses: {\n\t\t\t\t\t...prevState.addresses,\n\t\t\t\t\t[network]: {\n\t\t\t\t\t\t...prevState.addresses[network],\n\t\t\t\t\t\tec: ecAddresses,\n\t\t\t\t\t\tfct: factoidAddresses,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}));\n\t\t}\n\t};\n\n\tgetEntryCreditRate = async () => {\n\t\treturn await this.props.factomCliController.factomCli.getEntryCreditRate();\n\t};\n\n\tgetFactoshiFee = async () => {\n\t\tconst ecRate = await this.getEntryCreditRate();\n\n\t\tconst exampleAddress =\n\t\t\t'FA3E6enA33y9f5K9q9nrWfcDNrVR4zAp4xpniizNjQbV4RAmPjat';\n\n\t\tconst fee = Transaction.builder()\n\t\t\t.input(exampleAddress, Number.MAX_SAFE_INTEGER)\n\t\t\t.output(exampleAddress, Number.MAX_SAFE_INTEGER)\n\t\t\t.build()\n\t\t\t.computeRequiredFees(ecRate, { rcdType: 1 });\n\n\t\treturn fee;\n\t};\n\n\tgetFactoidFee = async () => {\n\t\tconst factoshiFee = await this.getFactoshiFee();\n\n\t\treturn toFactoids(factoshiFee);\n\t};\n\n\tnewStandardAddress = (address, nickname) => ({\n\t\timportType: 'standard',\n\t\taddress,\n\t\tbalance: null,\n\t\tnickname,\n\t\tpendingAddressCallback: (pendingTransaction) => {\n\t\t\tthis.pendingTransactionListener(pendingTransaction, address);\n\t\t},\n\t\ttransactions: [],\n\t\tsaveLocally: false,\n\t});\n\n\tnewSeedAddress = (address, nickname, index) => ({\n\t\timportType: 'seed',\n\t\taddress,\n\t\tbalance: null,\n\t\tnickname,\n\t\ttransactions: [],\n\t\tindex,\n\t\tpendingAddressCallback: (pendingTransaction) => {\n\t\t\tthis.pendingTransactionListener(pendingTransaction, address);\n\t\t},\n\t\tsaveLocally: false,\n\t});\n\n\tnewLedgerAddress = (address, nickname, index) => ({\n\t\timportType: 'ledger',\n\t\taddress,\n\t\tbalance: null,\n\t\tnickname,\n\t\ttransactions: [],\n\t\tindex,\n\t\tpendingAddressCallback: (pendingTransaction) => {\n\t\t\tthis.pendingTransactionListener(pendingTransaction, address);\n\t\t},\n\t\tsaveLocally: false,\n\t});\n\n\trender() {\n\t\tif (this.state.isStateHydrated) {\n\t\t\treturn (\n\t\t\t\t<WalletContext.Provider value={this.state}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</WalletContext.Provider>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nconst enhancer = _flowRight(withNetwork, withFactomCli);\n\nexport default enhancer(WalletController);\n","import React from 'react';\n\nconst SeedContext = React.createContext();\n\nconst withSeed = (BaseComponent) => (props) => (\n\t<SeedContext.Consumer>\n\t\t{(seedController) => (\n\t\t\t<BaseComponent {...props} seedController={seedController} />\n\t\t)}\n\t</SeedContext.Consumer>\n);\n\nexport { SeedContext, withSeed };\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport { SeedContext } from './SeedContext';\nimport { withFactomCli } from './FactomCliContext';\nimport { withNetwork } from './NetworkContext';\nimport { withWalletContext } from './WalletContext';\nimport {\n\tisValidPublicEcAddress,\n\tisValidPublicFctAddress,\n\tseedToPrivateFctAddress,\n\tseedToPrivateEcAddress,\n\tgetPublicAddress,\n} from 'factom/dist/factom';\nimport factombip44 from 'factombip44/dist/factombip44';\n\n/**\n * Constants\n */\nconst keyToFctAddress = (key) => getPublicAddress(seedToPrivateFctAddress(key));\nconst keyToECAddress = (key) => getPublicAddress(seedToPrivateEcAddress(key));\n\nclass SeedController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tgetSeedAddresses: this.getSeedAddresses,\n\t\t\tsignWithSeed: this.signWithSeed,\n\t\t\tverifySeed: this.verifySeed,\n\t\t\tgetRandomMnemonic: this.getRandomMnemonic,\n\t\t\tgetPrivateKey: this.getPrivateKey,\n\t\t};\n\t}\n\n\tgetSeedAddresses = async (mnemonic, startIndex, amount, type) => {\n\t\tlet result = [];\n\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\n\n\t\tfor (let index = startIndex; index < startIndex + amount; index++) {\n\t\t\tlet key = null;\n\t\t\tlet address = null;\n\n\t\t\tif (type === 'fct') {\n\t\t\t\tkey = wallet.generateFactoidPrivateKey(bip32Account, 0, index);\n\t\t\t\taddress = keyToFctAddress(key);\n\t\t\t} else if (type === 'ec') {\n\t\t\t\tkey = wallet.generateEntryCreditPrivateKey(bip32Account, 0, index);\n\t\t\t\taddress = keyToECAddress(key);\n\t\t\t}\n\n\t\t\tresult.push({ address, index });\n\t\t}\n\n\t\tconst addressList = await Promise.all(\n\t\t\tresult.map(this.props.walletController.updateWalletBalance)\n\t\t);\n\n\t\treturn addressList;\n\t};\n\n\tsignWithSeed = async ({ mnemonic, index, toAddr, amount, type }) => {\n\t\tlet signedTX = {};\n\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\n\n\t\tconst privateKey = seedToPrivateFctAddress(\n\t\t\twallet.generateFactoidPrivateKey(bip32Account, 0, index)\n\t\t);\n\n\t\tif (type === 'sendFCT') {\n\t\t\tsignedTX = await this.props.factomCliController.factomCli.createFactoidTransaction(\n\t\t\t\tprivateKey,\n\t\t\t\ttoAddr,\n\t\t\t\tamount\n\t\t\t);\n\t\t} else if (type === 'convertFCT') {\n\t\t\tsignedTX = await this.props.factomCliController.factomCli.createEntryCreditPurchaseTransaction(\n\t\t\t\tprivateKey,\n\t\t\t\ttoAddr,\n\t\t\t\tamount\n\t\t\t);\n\t\t}\n\n\t\treturn signedTX;\n\t};\n\n\tverifySeed = (mnemonic, { address, index }) => {\n\t\ttry {\n\t\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\n\t\t\tconst bip32Account = this.props.networkController.networkProps\n\t\t\t\t.bip32Account;\n\n\t\t\tlet derivedAddress = null;\n\t\t\tif (isValidPublicFctAddress(address)) {\n\t\t\t\tderivedAddress = keyToFctAddress(\n\t\t\t\t\twallet.generateFactoidPrivateKey(bip32Account, 0, index)\n\t\t\t\t);\n\t\t\t} else if (isValidPublicEcAddress(address)) {\n\t\t\t\tderivedAddress = keyToECAddress(\n\t\t\t\t\twallet.generateEntryCreditPrivateKey(bip32Account, 0, index)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn derivedAddress.valueOf() === address.valueOf(); // memoize\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tgetRandomMnemonic() {\n\t\treturn factombip44.randomMnemonic();\n\t}\n\n\tgetPrivateKey = (mnemonic, { address, index }) => {\n\t\tconst bip32Account = this.props.networkController.networkProps.bip32Account;\n\t\tconst wallet = new factombip44.FactomBIP44(mnemonic);\n\t\tlet privateKey = null;\n\t\tif (isValidPublicFctAddress(address)) {\n\t\t\tconst key = wallet.generateFactoidPrivateKey(bip32Account, 0, index);\n\t\t\tprivateKey = seedToPrivateFctAddress(key);\n\t\t} else if (isValidPublicEcAddress(address)) {\n\t\t\tconst key = wallet.generateEntryCreditPrivateKey(bip32Account, 0, index);\n\t\t\tprivateKey = seedToPrivateEcAddress(key);\n\t\t}\n\t\treturn privateKey;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<SeedContext.Provider value={this.state}>\n\t\t\t\t{this.props.children}\n\t\t\t</SeedContext.Provider>\n\t\t);\n\t}\n}\n\nconst enhancer = _flowRight(withWalletContext, withNetwork, withFactomCli);\n\nexport default enhancer(SeedController);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FactomCliContext } from './FactomCliContext';\nimport { FactomCli, FactomEventEmitter } from 'factom/dist/factom';\nimport { withNetwork } from './NetworkContext';\nimport defaultsDeep from 'lodash/fp/defaultsDeep';\nimport _flowRight from 'lodash/flowRight';\nimport _flow from 'lodash/flow';\nimport _noop from 'lodash/noop';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Header from '../header/Header';\n\nconst FACTOM_NODE_CONNECTION_TIMEOUT = 9000;\n\nclass FactomCliController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tconnectToServer: this.connectToServer,\n\t\t\tblockHeight: null,\n\t\t\tisConnected: false,\n\t\t\terror: false,\n\t\t};\n\t}\n\n\tdefaultConnectionParams = {\n\t\tpath: '/v2',\n\t\tdebugPath: '/debug',\n\t\tprotocol: 'https',\n\t\trejectUnauthorized: true,\n\t\tretry: {\n\t\t\tretries: 4,\n\t\t\tfactor: 2,\n\t\t\tminTimeout: 500,\n\t\t\tmaxTimeout: 2000,\n\t\t},\n\t};\n\n\tasync componentDidMount() {\n\t\tawait this.connectToServer();\n\t}\n\n\tgetDefaultConnectionParams = () => {\n\t\tconst connectionParams = {\n\t\t\thost: this.props.networkController.networkProps.apiHost,\n\t\t\tport: this.props.networkController.networkProps.apiPort,\n\t\t};\n\n\t\treturn defaultsDeep(this.defaultConnectionParams, connectionParams);\n\t};\n\n\tnewFactomCli = (connectionParams) =>\n\t\tnew FactomCli(defaultsDeep(this.defaultConnectionParams, connectionParams));\n\n\tnewFactomEmitter = (factomCli) =>\n\t\tnew FactomEventEmitter(factomCli, {\n\t\t\tinterval: 10000,\n\t\t});\n\n\tupdateBlock = (directoryBlock) => {\n\t\tconst { height } = directoryBlock;\n\t\t// process new block\n\t\tthis.setState({\n\t\t\tblockHeight: height,\n\t\t});\n\t};\n\n\tconnectToServer = async () => {\n\t\t// reset state\n\t\tawait this.smartSetState({\n\t\t\tisConnected: false,\n\t\t\tblockHeight: null,\n\t\t});\n\n\t\t// disable event emitter\n\t\tif (this.state.factomEmitter) {\n\t\t\tthis.state.factomEmitter.removeListener(\n\t\t\t\t'newDirectoryBlock',\n\t\t\t\tthis.updateBlock\n\t\t\t);\n\t\t}\n\n\t\tconst connectionParams = {\n\t\t\thost: this.props.networkController.networkProps.apiHost,\n\t\t\tport: this.props.networkController.networkProps.apiPort,\n\t\t};\n\n\t\tconst factomCli = this.newFactomCli(connectionParams);\n\t\ttry {\n\t\t\t// test connection\n\t\t\tif (\n\t\t\t\tawait factomCli.factomdApi('properties', null, {\n\t\t\t\t\ttimeout: FACTOM_NODE_CONNECTION_TIMEOUT,\n\t\t\t\t\tretry: { retries: 0 },\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\t// successful connection\n\t\t\t\tconst factomEmitter = this.newFactomEmitter(factomCli);\n\t\t\t\tawait this.smartSetState({\n\t\t\t\t\tfactomCli,\n\t\t\t\t\tfactomEmitter,\n\t\t\t\t});\n\n\t\t\t\t// get latest block when app loads\n\t\t\t\tconst directoryBlockHead = await this.state.factomCli.getDirectoryBlockHead();\n\t\t\t\tthis.updateBlock(directoryBlockHead);\n\n\t\t\t\tawait this.state.factomEmitter.on(\n\t\t\t\t\t'newDirectoryBlock',\n\t\t\t\t\tthis.updateBlock\n\t\t\t\t);\n\n\t\t\t\tawait this.smartSetState({\n\t\t\t\t\tisConnected: true,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// unsuccessful connection\n\t\t\tconsole.log('Error connecting to server.');\n\t\t\tconsole.log(e);\n\t\t\tawait this.smartSetState({ error: true });\n\t\t}\n\t};\n\n\tsmartSetState = (newState, afterSetState = _noop) =>\n\t\tnew Promise((resolve) =>\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\n\t\t);\n\n\trender() {\n\t\tif (this.state.error) {\n\t\t\treturn (\n\t\t\t\t<FactomCliContext.Provider value={this.state}>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Header disabled />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} justify=\"center\" container>\n\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\tUnable to connect to Factom node. Try to refresh the page.\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tSupport is available in the #myfactomwallet channel on{' '}\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\thref={'https://discord.gg/79kH2pp'}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDiscord.\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</FactomCliContext.Provider>\n\t\t\t);\n\t\t} else if (!this.state.isConnected) {\n\t\t\treturn (\n\t\t\t\t<FactomCliContext.Provider value={this.state}>\n\t\t\t\t\t<Header disabled greenConnection />\n\t\t\t\t</FactomCliContext.Provider>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<FactomCliContext.Provider value={this.state}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</FactomCliContext.Provider>\n\t\t\t);\n\t\t}\n\t}\n}\n\nFactomCliController.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n};\n\nconst enhancer = _flowRight(withNetwork);\n\nexport default enhancer(FactomCliController);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NetworkContext } from './NetworkContext';\nimport _flow from 'lodash/flow';\nimport _noop from 'lodash/noop';\n\nclass NetworkController extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tnetworkProps: this.networkProps['mainnet'],\n\t\t\tchangeNetwork: this.changeNetwork,\n\t\t};\n\t}\n\n\tnetworkProps = {\n\t\tmainnet: {\n\t\t\tnetwork: 'mainnet',\n\t\t\tbip32Account: 0,\n\t\t\tfactoidAbbreviation: 'FCT',\n\t\t\tfactoidAbbreviationFull: 'Factoid',\n\t\t\tecAbbreviation: 'EC',\n\t\t\tecAbbreviationFull: 'Entry Credit',\n\t\t\tapiPort: 443,\n\t\t\tapiHost: 'api.factomd.net',\n\t\t\texplorerURL: 'https://explorer.factom.pro',\n\t\t\ttransactionUrlSuffix: '/transactions/',\n\t\t},\n\t\ttestnet: {\n\t\t\tnetwork: 'testnet',\n\t\t\tbip32Account: 2147483647,\n\t\t\tfactoidAbbreviation: 'TTS',\n\t\t\tfactoidAbbreviationFull: 'Testoid',\n\t\t\tecAbbreviation: 'TC',\n\t\t\tecAbbreviationFull: 'Test Credit',\n\t\t\tapiPort: 8288,\n\t\t\tapiHost: 'api.myfactomwallet.com',\n\t\t\texplorerURL: 'https://testnet.explorer.factom.pro',\n\t\t\ttransactionUrlSuffix: '/transactions/',\n\t\t},\n\t};\n\n\tchangeNetwork = async (network) => {\n\t\tawait this.smartSetState({ networkProps: this.networkProps[network] });\n\t};\n\n\tsmartSetState = (newState, afterSetState = _noop) =>\n\t\tnew Promise((resolve) =>\n\t\t\tthis.setState(newState, _flow([afterSetState, resolve]))\n\t\t);\n\n\trender() {\n\t\treturn (\n\t\t\t<NetworkContext.Provider value={this.state}>\n\t\t\t\t{this.props.children}\n\t\t\t</NetworkContext.Provider>\n\t\t);\n\t}\n}\n\nNetworkController.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n};\n\nexport default NetworkController;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Warning from '@material-ui/icons/Warning';\n\nfunction ConfirmationDialogRaw(props) {\n\tconst { handleClose, ...other } = props;\n\n\treturn (\n\t\t<Dialog\n\t\t\tdisableBackdropClick\n\t\t\tdisableEscapeKeyDown\n\t\t\taria-labelledby=\"confirmation-dialog-title\"\n\t\t\t{...other}\n\t\t>\n\t\t\t<DialogTitle align=\"center\" style={{ backgroundColor: '#f50057' }}>\n\t\t\t\t<Warning fontSize=\"large\" />\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<br />\n\t\t\t\t<Typography variant=\"h5\" align=\"center\">\n\t\t\t\t\tImportant\n\t\t\t\t</Typography>\n\t\t\t\t<br />\n\t\t\t\t<Typography>\n\t\t\t\t\tMyFactomWallet.com is a client-side interface wallet. We provide the\n\t\t\t\t\tuser with access to the Factom blockchain, but we do not store,\n\t\t\t\t\tcontrol or have access to ANY user wallet or blockchain information\n\t\t\t\t\tincluding keys or transaction data. Therefore,&nbsp;\n\t\t\t\t\t<b>we cannot reverse transactions or recover funds.</b>\n\t\t\t\t\t&nbsp; MyFactomWallet.com is not a bank or a custodian. Your assets\n\t\t\t\t\tand your security are entirely your own responsibility. By using\n\t\t\t\t\tMyFactomWallet.com and/or by clicking 'accept' at the bottom, you\n\t\t\t\t\tagree to the following notices:\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"h5\" align=\"center\">\n\t\t\t\t\tNotices\n\t\t\t\t</Typography>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tThis project is under active development; there is always the\n\t\t\t\t\t\t\tpossibility something unexpected happens that causes your funds to\n\t\t\t\t\t\t\tbe lost, including but not limited to third party domain attacks.{' '}\n\t\t\t\t\t\t\t<b>We are not responsible for any loss.</b>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tNever send funds from a mainnet address to a testnet address and\n\t\t\t\t\t\t\tvice versa. Sending Factoids to the testnet will likely result in\n\t\t\t\t\t\t\ta loss of factoids. You acknowledge that testnet Testoids and Test\n\t\t\t\t\t\t\tCredits have no value.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tWhen you create new Factoid or Entry Credit addresses on\n\t\t\t\t\t\t\tMyFactomWallet.com, a random 12-word cryptographic seed phrase is\n\t\t\t\t\t\t\tgenerated in the browser, and is used to generate new addresses\n\t\t\t\t\t\t\tand sign transactions.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tThe handling of your private keys or seed phrase is solely your\n\t\t\t\t\t\t\tresponsibility. It happens entirely on your computer, inside your\n\t\t\t\t\t\t\tbrowser.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tWe never transmit, receive or store your private keys or seeds.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tWe do not charge a transaction fee (blockchain fees still apply).\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tWe are not a custodian and have no information about or control\n\t\t\t\t\t\t\tover your Factoids or Entry Credits.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tYou are simply using our interface to interact directly with the\n\t\t\t\t\t\t\tblockchain.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tIf you provide your public key (address) to someone, they can\n\t\t\t\t\t\t\ttransfer Factoids to you.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tIf you provide your private key or seed phrase to a person or\n\t\t\t\t\t\t\tentity, then that person or entity has full control of your\n\t\t\t\t\t\t\taccount, and may withdraw your funds.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tWe are not a custodian. Your funds are stored on the blockchain\n\t\t\t\t\t\t\tand protected by your private key and/or seed phrase. As explained\n\t\t\t\t\t\t\tabove, your private key is solely your responsibility and\n\t\t\t\t\t\t\tMyFactomWallet.com does not store or have access to any of your\n\t\t\t\t\t\t\tkeys.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tOffered under MIT License Copyright © 2015-2018: THE SOFTWARE IS\n\t\t\t\t\t\t\tPROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\t\t\t\t\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t\t\t\t\t\t\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t\t\t\t\t\t\tNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\t\t\t\t\t\t\tHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\t\t\t\t\t\t\tWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\t\t\t\t\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\t\t\t\t\t\t\tDEALINGS IN THE SOFTWARE. The above copyright notice and this\n\t\t\t\t\t\t\tpermission notice shall be included in all copies or substantial\n\t\t\t\t\t\t\tportions of the Software.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<Typography variant=\"h5\" align=\"center\">\n\t\t\t\t\tImportant Tips\n\t\t\t\t</Typography>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tNever hand-type your public or private address.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tAlways send a small amount of Factoids first to ensure that the\n\t\t\t\t\t\t\ttransaction is processed correctly and the Factoids end up in the\n\t\t\t\t\t\t\tcorrect address. After verifying this, you may send the full\n\t\t\t\t\t\t\tamount of Factoids.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tIf you generated a new Factoid or Entry Credit address in\n\t\t\t\t\t\t\tMyFactomWallet.com; save and back up the associated seed BEFORE\n\t\t\t\t\t\t\tyou send any funds to it.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tDo not post your private key or seed on any social media,\n\t\t\t\t\t\t\tchat-platforms, email/sms it, or store it in any cloud storage\n\t\t\t\t\t\t\tservice (Google Drive, Dropbox etc).\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tUse a hardware wallet for added protection (Ledger Nano X/S\n\t\t\t\t\t\t\tsupported at this time).\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tRegularly monitor the security of your computer operating system\n\t\t\t\t\t\t\tto ensure that it is not compromised by malicious software whereby\n\t\t\t\t\t\t\tunauthorized third parties may obtain your private key or seed.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tEnsure that you are not on a phishing site, but have landed on the\n\t\t\t\t\t\t\tcorrect page (verify that you are on\n\t\t\t\t\t\t\thttps://www.myfactomwallet.com in the browser, and also check that\n\t\t\t\t\t\t\tthe “lock” symbol is displayed in the Chrome address bar).\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tThe user must understand that MyFactomWallet.com CANNOT:\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tAccess your wallet or send your funds for you\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tRecover or change your private key or seed\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tReverse, cancel, or refund any transactions\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Typography>Freeze FCT or Entry Credit addresses</Typography>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button\n\t\t\t\t\tdata-cy=\"disclaimer-accept\"\n\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\tAccept\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n\nConfirmationDialogRaw.propTypes = {\n\thandleClose: PropTypes.func,\n};\n\nfunction ConfirmationDialog(props) {\n\tconst [open, setOpen] = useState(true);\n\n\tfunction handleClose() {\n\t\tsetOpen(false);\n\t}\n\n\treturn <ConfirmationDialogRaw open={open} handleClose={handleClose} />;\n}\n\nexport default ConfirmationDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _flowRight from 'lodash/flowRight';\nimport { withNetwork } from './context/NetworkContext';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Typography from '@material-ui/core/Typography';\n\nfunction TestnetWarningBar(props) {\n\tconst {\n\t\tclasses,\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\tif (networkProps.network === 'testnet') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className={classes.toolbarSpace} />\n\t\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\n\t\t\t\t\t\t<Typography data-cy=\"testnetWarning\" variant=\"h3\">\n\t\t\t\t\t\t\tYou are connected to the Factom <b>Testnet</b>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</>\n\t\t);\n\t} else {\n\t\treturn null;\n\t}\n}\n\nTestnetWarningBar.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tappBar: {\n\t\ttop: 'auto',\n\t\tbottom: 0,\n\t\tminHeight: 78,\n\t\tpaddingTop: 9,\n\t\tbackgroundColor: '#ffa000',\n\t},\n\ttoolbar: {\n\t\tmarginLeft: 'auto',\n\t\tmarginRight: 'auto',\n\t},\n\twarningIcon: {\n\t\tfontSize: 52,\n\t},\n\ttoolbarSpace: {\n\t\theight: 85,\n\t},\n});\n\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\nexport default enhancer(TestnetWarningBar);\n","import React from 'react';\nimport _get from 'lodash/get';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withNetwork } from '../context/NetworkContext';\nimport _flowRight from 'lodash/flowRight';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\n\nconst getImportTypes = (networkProps) => {\n\treturn [\n\t\t{\n\t\t\tvalue: 'fct',\n\t\t\tlabel: 'Import ' + networkProps.factoidAbbreviationFull + ' Address',\n\t\t},\n\t\t{\n\t\t\tvalue: 'ec',\n\t\t\tlabel: 'Import ' + networkProps.ecAbbreviationFull + ' Address',\n\t\t},\n\t\t{\n\t\t\tvalue: 'new',\n\t\t\tlabel: 'Generate new 12-word seed',\n\t\t},\n\t\t{\n\t\t\tvalue: 'importSeed',\n\t\t\tlabel: 'Import addresses from mnemonic seed phrase',\n\t\t},\n\t\t{\n\t\t\tvalue: 'ledger',\n\t\t\tlabel: 'Import addresses from Ledger Nano X/S',\n\t\t},\n\t];\n};\n\n/**\n * Constants\n */\nconst importTypePath = 'importType';\n\nfunction ImportTypeForm(props) {\n\tconst {\n\t\tclasses,\n\t\timportType,\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ [importTypePath]: importType }}\n\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t// proceed to next page\n\t\t\t\tprops.handleNext();\n\t\t\t}}\n\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t[importTypePath]: Yup.string().required('Required'),\n\t\t\t})}\n\t\t\trender={({ values, handleChange, isSubmitting, errors, touched }) => (\n\t\t\t\t<Form>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t_get(errors, importTypePath) && _get(touched, importTypePath)\n\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcomponent=\"fieldset\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<FormLabel component=\"legend\">\n\t\t\t\t\t\t\tHow would you like to add a new address?\n\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\tname={importTypePath}\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<span className={classes.errorText}>&nbsp;*</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormLabel>\n\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\taria-label=\"Import Type\"\n\t\t\t\t\t\t\tname={importTypePath}\n\t\t\t\t\t\t\tvalue={_get(values, importTypePath)}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\tprops.updateImportType(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{getImportTypes(networkProps).map((option, index) => (\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\tlabel={option.label}\n\t\t\t\t\t\t\t\t\tdisabled={option.disabled}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button disabled={true}>Back</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tdata-cy=\"next\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t/>\n\t);\n}\n\nImportTypeForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red' },\n});\n\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\nexport default enhancer(ImportTypeForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport { Formik, Form } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport { isValidPublicFctAddress } from 'factom/dist/factom';\nimport get from 'lodash/get';\nimport findIndex from 'lodash/findIndex';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport { ADDRESS_LENGTH } from '../constants/WALLET_CONSTANTS';\nimport FormTextField from '../component/form/FormTextField';\nimport { NICKNAME_MAX_LENGTH } from '../constants/WALLET_CONSTANTS';\n\n/**\n * Constants\n */\nconst fctAddrPath = 'factoidAddress';\nconst nicknamePath = 'nickname';\n\nfunction ImportFctForm(props) {\n\tconst {\n\t\twalletController: { getFactoidAddresses, newStandardAddress, addAddress },\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\tconst factoidAddresses = getFactoidAddresses();\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ factoidAddress: '', nickname: '' }}\n\t\t\tonSubmit={(values, actions) => {\n\t\t\t\tconst fctAddress_o = newStandardAddress(\n\t\t\t\t\tget(values, fctAddrPath),\n\t\t\t\t\tget(values, nicknamePath).trim()\n\t\t\t\t);\n\n\t\t\t\taddAddress(fctAddress_o, 'fct');\n\n\t\t\t\t// proceed to next page\n\t\t\t\tprops.handleNext();\n\t\t\t}}\n\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t[fctAddrPath]: Yup.string()\n\t\t\t\t\t.required('Required')\n\t\t\t\t\t.test(fctAddrPath, 'Invalid Address', isValidPublicFctAddress)\n\t\t\t\t\t.test(\n\t\t\t\t\t\tfctAddrPath,\n\t\t\t\t\t\t'Enter unique address',\n\t\t\t\t\t\t(value) => findIndex(factoidAddresses, ['address', value]) === -1\n\t\t\t\t\t),\n\t\t\t\t[nicknamePath]: Yup.string()\n\t\t\t\t\t.trim()\n\t\t\t\t\t.required('Required')\n\t\t\t\t\t.test(\n\t\t\t\t\t\tnicknamePath,\n\t\t\t\t\t\t'Enter unique nickname',\n\t\t\t\t\t\t(value) => findIndex(factoidAddresses, [nicknamePath, value]) === -1\n\t\t\t\t\t),\n\t\t\t})}\n\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t<Form>\n\t\t\t\t\t<FormTextField\n\t\t\t\t\t\terror={\n\t\t\t\t\t\t\terrors.factoidAddress && touched.factoidAddress ? true : false\n\t\t\t\t\t\t}\n\t\t\t\t\t\tname={fctAddrPath}\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t'Public ' + networkProps.factoidAbbreviationFull + ' Address'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmaxLength={ADDRESS_LENGTH}\n\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormTextField\n\t\t\t\t\t\terror={errors[nicknamePath] && touched[nicknamePath] ? true : false}\n\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\n\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button onClick={props.handleBack}>Back</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t/>\n\t);\n}\n\nImportFctForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(ImportFctForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport { Formik, Form } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport { isValidPublicEcAddress } from 'factom/dist/factom';\nimport _get from 'lodash/get';\nimport findIndex from 'lodash/findIndex';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport { ADDRESS_LENGTH } from '../constants/WALLET_CONSTANTS';\nimport FormTextField from '../component/form/FormTextField';\nimport { NICKNAME_MAX_LENGTH } from '../constants/WALLET_CONSTANTS';\n\n/**\n * Constants\n */\nconst ecAddrNamePath = 'entryCreditAddress';\nconst nicknamePath = 'nickname';\n\nfunction ImportEcForm(props) {\n\tconst {\n\t\twalletController: {\n\t\t\tgetEntryCreditAddresses,\n\t\t\tnewStandardAddress,\n\t\t\taddAddress,\n\t\t},\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\tconst ecAddresses = getEntryCreditAddresses();\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ entryCreditAddress: '', nickname: '' }}\n\t\t\tonSubmit={(values, actions) => {\n\t\t\t\tconst ecAddress_o = newStandardAddress(\n\t\t\t\t\t_get(values, ecAddrNamePath),\n\t\t\t\t\t_get(values, nicknamePath).trim()\n\t\t\t\t);\n\n\t\t\t\taddAddress(ecAddress_o, 'ec');\n\n\t\t\t\t// proceed to next page\n\t\t\t\tprops.handleNext();\n\t\t\t}}\n\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t[ecAddrNamePath]: Yup.string()\n\t\t\t\t\t.required('Required')\n\t\t\t\t\t.test(ecAddrNamePath, 'Invalid Address', isValidPublicEcAddress)\n\t\t\t\t\t.test(\n\t\t\t\t\t\tecAddrNamePath,\n\t\t\t\t\t\t'Enter unique address',\n\t\t\t\t\t\t(value) => findIndex(ecAddresses, ['address', value]) === -1\n\t\t\t\t\t),\n\t\t\t\t[nicknamePath]: Yup.string()\n\t\t\t\t\t.trim()\n\t\t\t\t\t.required('Required')\n\t\t\t\t\t.test(\n\t\t\t\t\t\tnicknamePath,\n\t\t\t\t\t\t'Enter unique nickname',\n\t\t\t\t\t\t(value) => findIndex(ecAddresses, [nicknamePath, value]) === -1\n\t\t\t\t\t),\n\t\t\t})}\n\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t<Form>\n\t\t\t\t\t<FormTextField\n\t\t\t\t\t\terror={\n\t\t\t\t\t\t\terrors.entryCreditAddress && touched.entryCreditAddress\n\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t}\n\t\t\t\t\t\tname={ecAddrNamePath}\n\t\t\t\t\t\tlabel={'Public ' + networkProps.ecAbbreviationFull + ' Address'}\n\t\t\t\t\t\tmaxLength={ADDRESS_LENGTH}\n\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormTextField\n\t\t\t\t\t\terror={errors[nicknamePath] && touched[nicknamePath] ? true : false}\n\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\n\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button onClick={props.handleBack}>Back</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t/>\n\t);\n}\n\nImportEcForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(ImportEcForm);\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withSeed } from '../context/SeedContext';\nimport _get from 'lodash/get';\nimport _flowRight from 'lodash/flowRight';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormTextField from '../component/form/FormTextField';\n\n/**\n * Constants\n */\nconst mnemonicPath = 'mnemonic';\n\nclass NewSeedForm extends React.Component {\n\tstate = {\n\t\tstep: 1,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.props.setMnemonic(this.props.seedController.getRandomMnemonic());\n\t}\n\n\tnextStep = () => {\n\t\tthis.setState({ step: 2 });\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\t[mnemonicPath]: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[mnemonicPath]: Yup.string()\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.oneOf([this.props.mnemonic], 'Seed does not match'),\n\t\t\t\t})}\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tstyle={{ width: '500px' }}\n\t\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.state.step === 1 && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ fontWeight: 500 }}\n\t\t\t\t\t\t\t\t\tclassName={classes.warningText}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tWrite down your seed carefully on a piece of paper. This seed\n\t\t\t\t\t\t\t\t\tprovides access to all the derived addresses. If you lose this\n\t\t\t\t\t\t\t\t\tseed, you will lose access to your addresses forever!\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Typography style={{ fontWeight: 500 }}>\n\t\t\t\t\t\t\t\t\tSeed Phrase:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography data-cy=\"mnemonic\">\n\t\t\t\t\t\t\t\t\t{this.props.mnemonic}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{this.state.step === 2 && (\n\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t_get(errors, mnemonicPath) && _get(touched, mnemonicPath)\n\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname={mnemonicPath}\n\t\t\t\t\t\t\t\tlabel=\"Verify Seed Phrase\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.props.setMnemonic(null);\n\t\t\t\t\t\t\t\t\tthis.props.handleBack();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{this.state.step === 1 && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={this.nextStep}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tVerify Seed\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.state.step === 2 && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\nNewSeedForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\twarningText: { color: 'red', fontSize: '15px' },\n});\n\nconst enhancer = _flowRight(withSeed, withStyles(styles));\n\nexport default enhancer(NewSeedForm);\n","import React, { useContext } from 'react';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { toFactoids } from '../../utils';\n\nconst FormatBalance = (props) => {\n\tconst { networkProps } = useContext(NetworkContext);\n\n\tconst { balance, type } = props;\n\n\tif (type === 'fct') {\n\t\treturn <FormatFCTBalance balance={balance} networkProps={networkProps} />;\n\t} else if (type === 'ec') {\n\t\treturn <FormatECBalance balance={balance} networkProps={networkProps} />;\n\t}\n};\n\nconst FormatFCTBalance = (props) => {\n\tconst { networkProps, balance } = props;\n\n\tlet result = '';\n\n\tconst factoshiBalance = balance;\n\tconst factoidBalance = toFactoids(parseInt(factoshiBalance, 10));\n\n\tresult = (\n\t\t<span>\n\t\t\t{factoidBalance.toLocaleString(undefined, {\n\t\t\t\tmaximumFractionDigits: 8,\n\t\t\t})}\n\t\t\t&nbsp;&nbsp;{networkProps.factoidAbbreviation}\n\t\t</span>\n\t);\n\n\treturn result;\n};\n\nconst FormatECBalance = (props) => {\n\tconst { networkProps, balance } = props;\n\n\tlet result = '';\n\n\tconst entryCreditBalance = parseInt(balance, 10);\n\n\tresult = (\n\t\t<span>\n\t\t\t{entryCreditBalance}\n\t\t\t&nbsp;&nbsp;{networkProps.ecAbbreviation}\n\t\t</span>\n\t);\n\n\treturn result;\n};\n\nexport default FormatBalance;\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Field, ErrorMessage, FieldArray } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport FormatBalance from '../walletManager/shared/BalanceFormatter.js';\nimport { NICKNAME_MAX_LENGTH } from '../constants/WALLET_CONSTANTS';\n\n/**\n * Constants\n */\nconst addressesPath = 'addresses';\n\nfunction GenerateAddressTable(props) {\n\tconst [loading, setLoading] = useState(false);\n\n\tfunction addGeneratedAddress(nickname, address_o, index, arrayHelpers) {\n\t\tif (nickname) {\n\t\t\tconst addr_o = props.newAddress(\n\t\t\t\taddress_o.address,\n\t\t\t\tnickname.trim(),\n\t\t\t\tindex\n\t\t\t);\n\t\t\tarrayHelpers.replace(index, addr_o);\n\t\t} else {\n\t\t\tarrayHelpers.replace(index, null);\n\t\t}\n\t}\n\n\tfunction validateNickname(value) {\n\t\tconst { userAddressList } = props;\n\t\tconst userAddressNicknames = userAddressList.map(\n\t\t\t(addr_o) => addr_o.nickname\n\t\t);\n\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Required';\n\t\t} else if (userAddressNicknames.indexOf(value.trim()) !== -1) {\n\t\t\terror = 'Enter unique nickname';\n\t\t}\n\t\treturn error;\n\t}\n\n\tasync function getNext() {\n\t\tsetLoading(true);\n\t\tawait props.getNextFive();\n\t\tsetLoading(false);\n\t}\n\n\tconst {\n\t\tclasses,\n\t\tgeneratedAddressList,\n\t\tuserAddressList, // existing addresses\n\t\tvalues,\n\t\terrors,\n\t\ttouched,\n\t\tsetFieldValue,\n\t\thandleChange,\n\t\ttype,\n\t\ttitle,\n\t} = props;\n\n\tconst userAddresses = userAddressList.map((addr_o) => addr_o.address);\n\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h6\">{title}</Typography>\n\t\t\t<ErrorMessage\n\t\t\t\tname={addressesPath}\n\t\t\t\trender={(msg) => (\n\t\t\t\t\t<span className={classes.errorText}>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{msg}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Paper className={classes.root} elevation={2}>\n\t\t\t\t<Table size=\"small\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<CustomCell />\n\t\t\t\t\t\t\t<CustomCell>Address</CustomCell>\n\t\t\t\t\t\t\t<CustomCell>Balance</CustomCell>\n\t\t\t\t\t\t\t<CustomCell>Nickname</CustomCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{!_isEmpty(generatedAddressList) &&\n\t\t\t\t\t\t\tgeneratedAddressList.map((address_o, index) => {\n\t\t\t\t\t\t\t\tconst checkboxPath = 'checkbox_' + index;\n\t\t\t\t\t\t\t\tconst nicknamePath = 'nickname_' + index;\n\t\t\t\t\t\t\t\tconst address = 'address_' + index;\n\t\t\t\t\t\t\t\tconst balance = 'balance_' + index;\n\t\t\t\t\t\t\t\tconst duplicate =\n\t\t\t\t\t\t\t\t\tuserAddresses.indexOf(address_o.address) === -1\n\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t: true;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow key={index}>\n\t\t\t\t\t\t\t\t\t\t<FieldArray\n\t\t\t\t\t\t\t\t\t\t\tname={addressesPath}\n\t\t\t\t\t\t\t\t\t\t\trender={(arrayHelpers) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{duplicate ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Address already added\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={checkboxPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers.replace(index, null);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(nicknamePath, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={index + 1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell name={address}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{address_o.address}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell name={balance}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormatBalance\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance={address_o.balance}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{duplicate ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserAddressList.find((addr_o) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn addr_o.address === address_o.address;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}).nickname\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{_get(values, checkboxPath) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate={validateNickname}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddGeneratedAddress(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress_o,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrayHelpers\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors[nicknamePath] &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched[nicknamePath]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: NICKNAME_MAX_LENGTH,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.errorTextSmall}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{msg}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomCell>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<CustomCell />\n\t\t\t\t\t\t\t<CustomCell>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={getNext}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{_isEmpty(generatedAddressList)\n\t\t\t\t\t\t\t\t\t\t? 'Loading'\n\t\t\t\t\t\t\t\t\t\t: 'Load Five More'}\n\t\t\t\t\t\t\t\t\t{(loading || _isEmpty(generatedAddressList)) && (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={5} size={15} />\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CustomCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableBody>\n\t\t\t\t\t<TableFooter />\n\t\t\t\t</Table>\n\t\t\t</Paper>\n\t\t</>\n\t);\n}\nconst CustomCell = withStyles((theme) => ({\n\thead: {\n\t\tcolor: 'black',\n\t\tfontSize: '13px',\n\t\tpaddingLeft: 5,\n\t\tpaddingRight: 5,\n\t},\n\tbody: {\n\t\tpaddingLeft: 5,\n\t\tpaddingRight: 5,\n\t},\n}))(TableCell);\n\nconst styles = (theme) => ({\n\troot: {\n\t\twidth: '800px',\n\t\tmarginTop: 12,\n\t\toverflowX: 'auto',\n\t\tmaxHeight: 405,\n\t},\n\thead: {\n\t\tbackgroundColor: theme.palette.common.black,\n\t\tcolor: theme.palette.common.white,\n\t},\n\terrorText: {\n\t\tcolor: 'red',\n\t\tfontSize: '20px',\n\t},\n\terrorTextSmall: {\n\t\tcolor: 'red',\n\t\tfontSize: '12px',\n\t},\n});\n\nexport default withStyles(styles)(GenerateAddressTable);\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport _isNil from 'lodash/isNil';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport { withWalletContext } from '../context/WalletContext';\nimport Typography from '@material-ui/core/Typography';\nimport { withLedger } from '../context/LedgerContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport GenerateAddressTable from './GenerateAddressTable';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/**\n * Constants\n */\nconst addressesPath = 'addresses';\n\nconst getTitle = (networkProps) => {\n\treturn {\n\t\tfct:\n\t\t\t'Ledger Nano X/S ' + networkProps.factoidAbbreviationFull + ' Addresses',\n\t\tec: 'Ledger Nano X/S ' + networkProps.ecAbbreviationFull + ' Addresses',\n\t};\n};\n\nclass LedgerForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tgeneratedAddressList: [],\n\t\t\tledgerConnected: false,\n\t\t\tledgerStatus: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getNextFive();\n\t}\n\n\tretryConnection = () => {\n\t\tthis.setState({\n\t\t\tledgerStatus: null,\n\t\t});\n\t\tthis.getNextFive();\n\t};\n\n\tgetNextFive = async () => {\n\t\ttry {\n\t\t\tconst addressList = await this.props.ledgerController.getLedgerAddresses(\n\t\t\t\tthis.state.generatedAddressList.length,\n\t\t\t\t5,\n\t\t\t\tthis.props.type\n\t\t\t);\n\n\t\t\tconst generatedAddressList = await Promise.all(\n\t\t\t\taddressList.map(this.props.walletController.updateWalletBalance)\n\t\t\t);\n\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\tgeneratedAddressList: [\n\t\t\t\t\t...prevState.generatedAddressList,\n\t\t\t\t\t...generatedAddressList,\n\t\t\t\t],\n\t\t\t\tledgerConnected: true,\n\t\t\t}));\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tthis.setState({\n\t\t\t\tledgerStatus: 'Ledger Nano X/S not found. Troubleshooting tips:',\n\t\t\t\tledgerConnected: false,\n\t\t\t});\n\t\t}\n\t};\n\n\thasAddressSelected = (formValues) =>\n\t\tObject.keys(formValues)\n\t\t\t.filter((key) => key.startsWith('checkbox'))\n\t\t\t.some((key) => formValues[key]);\n\n\trender() {\n\t\tconst {\n\t\t\ttype,\n\t\t\twalletController: { getAddresses, addAddresses, newLedgerAddress },\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tlet userAddressList = getAddresses(type);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\taddresses: [],\n\t\t\t\t\tledgerConnected: this.state.ledgerConnected,\n\t\t\t\t\tledgerStatus: this.state.ledgerStatus,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tlet validAddresses = [];\n\t\t\t\t\tfor (let value of _get(values, addressesPath)) {\n\t\t\t\t\t\tif (!_isNil(value)) {\n\t\t\t\t\t\t\tvalidAddresses.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add addresses\n\t\t\t\t\taddAddresses(validAddresses, this.props.type);\n\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t/* \t[addressesPath]: Yup.array()\n\t\t\t\t\t\t.compact()\n\t\t\t\t\t\t.required('* You must add an Address'), */\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleChange,\n\t\t\t\t}) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t{values.ledgerConnected ? (\n\t\t\t\t\t\t\t<GenerateAddressTable\n\t\t\t\t\t\t\t\ttitle={getTitle(networkProps)[type]}\n\t\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\t\tgeneratedAddressList={this.state.generatedAddressList}\n\t\t\t\t\t\t\t\tuserAddressList={userAddressList}\n\t\t\t\t\t\t\t\tgetNextFive={this.getNextFive}\n\t\t\t\t\t\t\t\tnewAddress={newLedgerAddress}\n\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\t\ttouched={touched}\n\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t{!_isNil(values.ledgerStatus) ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Typography>{values.ledgerStatus}</Typography>\n\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you using a Ledger Nano X/S device?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tIs the Factom app launched on your device?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tIs your device running the latest version?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tHave you closed the Ledger Live Manager?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAre you using&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://www.google.com/chrome/'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tChrome\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>Are you running any adblockers?</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tHave you tried restarting your device?\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSupport is available in the #ledger-nano-s channel on\n\t\t\t\t\t\t\t\t\t\t\t\t\tour&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://discord.gg/79kH2pp'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDiscord server\n\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.retryConnection}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tRetry\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t<b>Connecting to Ledger Nano X/S</b>\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t<b>Note:</b>\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\tThe Ledger Nano X/S hardware wallet can be ordered\n\t\t\t\t\t\t\t\t\t\t\t\tfrom&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={'https://www.ledger.com/?r=1b0be6fa98ba'}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tLedger's website\n\t\t\t\t\t\t\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t(affiliate link).\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t\tTo function properly, the Factom application needs to be\n\t\t\t\t\t\t\t\t\t\t\t\tlaunched on the Ledger Nano X/S. You can install the\n\t\t\t\t\t\t\t\t\t\t\t\tapplication from the Ledger Live Manager.\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button onClick={this.props.handleBack}>Back</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting || !this.state.ledgerConnected}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.hasAddressSelected(values) ? 'Add and Continue' : 'Skip'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nLedgerForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '12px' },\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithLedger,\n\twithWalletContext,\n\twithStyles(styles)\n);\n\nexport default enhancer(LedgerForm);\n","import React, { useState, useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport _isNil from 'lodash/isNil';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withSeed } from '../context/SeedContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport GenerateAddressTable from './GenerateAddressTable';\n\n/**\n * Constants\n */\nconst addressesPath = 'addresses';\n\nconst getTitle = (networkProps) => {\n\treturn {\n\t\tfct: networkProps.factoidAbbreviationFull + ' Addresses',\n\t\tec: networkProps.ecAbbreviationFull + ' Addresses',\n\t};\n};\n\nfunction SeedForm(props) {\n\tconst {\n\t\tmnemonic,\n\t\ttype,\n\t\thandleNext,\n\t\tnetworkController: { networkProps },\n\t\tseedController: { getSeedAddresses },\n\t\twalletController: { getAddresses, addAddresses, newSeedAddress },\n\t} = props;\n\n\tconst [generatedAddressList, setGeneratedAddressList] = useState([]);\n\n\tconst [count, setCount] = useState(5);\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tawait fetchAddresses();\n\t\t}\n\n\t\tasync function fetchAddresses() {\n\t\t\tconst newAddressList = await getSeedAddresses(\n\t\t\t\tmnemonic,\n\t\t\t\tcount - 5,\n\t\t\t\t5,\n\t\t\t\ttype\n\t\t\t);\n\n\t\t\tsetGeneratedAddressList((prevState) => [...prevState, ...newAddressList]);\n\t\t}\n\n\t\tfetchData();\n\t}, [count, mnemonic, type, getSeedAddresses]);\n\n\tfunction getNextFive() {\n\t\tsetCount((prevCount) => setCount(prevCount + 5));\n\t}\n\n\tfunction isAddressSelected(formValues) {\n\t\treturn Object.keys(formValues)\n\t\t\t.filter((key) => key.startsWith('checkbox'))\n\t\t\t.some((key) => formValues[key]);\n\t}\n\n\tlet userAddressList = getAddresses(type);\n\n\treturn (\n\t\t<Formik\n\t\t\tenableReinitialize\n\t\t\tinitialValues={{\n\t\t\t\t[addressesPath]: [],\n\t\t\t}}\n\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\tlet validAddresses = [];\n\t\t\t\tfor (let value of _get(values, addressesPath)) {\n\t\t\t\t\tif (!_isNil(value)) {\n\t\t\t\t\t\tvalidAddresses.push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// add addresses\n\t\t\t\taddAddresses(validAddresses, type);\n\n\t\t\t\t// proceed to next page\n\t\t\t\thandleNext();\n\t\t\t}}\n\t\t\trender={({\n\t\t\t\tisSubmitting,\n\t\t\t\terrors,\n\t\t\t\ttouched,\n\t\t\t\tvalues,\n\t\t\t\tsetFieldValue,\n\t\t\t\thandleChange,\n\t\t\t}) => (\n\t\t\t\t<Form>\n\t\t\t\t\t<GenerateAddressTable\n\t\t\t\t\t\ttitle={getTitle(networkProps)[type]}\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tgeneratedAddressList={generatedAddressList}\n\t\t\t\t\t\tuserAddressList={userAddressList}\n\t\t\t\t\t\tgetNextFive={getNextFive}\n\t\t\t\t\t\tnewAddress={newSeedAddress}\n\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\ttouched={touched}\n\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t{props.handleBack && <Button onClick={props.handleBack}>Back</Button>}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{isAddressSelected(values) ? 'Add and Continue' : 'Skip'}\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t/>\n\t);\n}\n\nSeedForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\terrorText: { color: 'red', fontSize: '12px' },\n});\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithSeed,\n\twithWalletContext,\n\twithStyles(styles)\n);\n\nexport default enhancer(SeedForm);\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withWalletContext } from '../context/WalletContext';\nimport _get from 'lodash/get';\nimport _flowRight from 'lodash/flowRight';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport factombip44 from 'factombip44/dist/factombip44';\nimport FormTextField from '../component/form/FormTextField';\n\n/**\n * Constants\n */\nconst mnemonicPath = 'mnemonic';\n\nclass ImportSeedForm extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\t[mnemonicPath]: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tthis.props.setMnemonic(_get(values, mnemonicPath).trim());\n\t\t\t\t\t// proceed to next page\n\t\t\t\t\tthis.props.handleNext();\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[mnemonicPath]: Yup.string()\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\tmnemonicPath,\n\t\t\t\t\t\t\t'Invalid Seed Phrase',\n\t\t\t\t\t\t\tfactombip44.validMnemonic\n\t\t\t\t\t\t),\n\t\t\t\t})}\n\t\t\t\trender={({ isSubmitting, errors, touched }) => (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tstyle={{ width: '500px' }}\n\t\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t_get(errors, mnemonicPath) && _get(touched, mnemonicPath)\n\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname={mnemonicPath}\n\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Seed Phrase\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.props.setMnemonic(null);\n\t\t\t\t\t\t\t\t\tthis.props.handleBack();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nImportSeedForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\n\nexport default enhancer(ImportSeedForm);\n","import React, { useState } from 'react';\nimport ImportTypeForm from './ImportTypeForm';\nimport ImportFctForm from './ImportFctForm';\nimport ImportEcForm from './ImportEcForm';\nimport NewSeedForm from './NewSeedForm';\nimport LedgerForm from './LedgerForm';\nimport SeedForm from './SeedForm';\nimport ImportSeedForm from './ImportSeedForm';\n\nfunction AddWalletStepContent(props) {\n\tconst [mnemonic, setMnemonic] = useState(null);\n\n\tconst {\n\t\tactiveStep,\n\t\tupdateImportType,\n\t\thandleNext,\n\t\thandleBack,\n\t\timportType,\n\t} = props;\n\n\tswitch (activeStep) {\n\t\tcase 0:\n\t\t\treturn (\n\t\t\t\t<ImportTypeForm\n\t\t\t\t\thandleNext={handleNext}\n\t\t\t\t\timportType={importType}\n\t\t\t\t\tupdateImportType={updateImportType}\n\t\t\t\t/>\n\t\t\t);\n\t\tcase 1:\n\t\t\tif (importType === 'fct') {\n\t\t\t\treturn (\n\t\t\t\t\t<ImportFctForm handleNext={handleNext} handleBack={handleBack} />\n\t\t\t\t);\n\t\t\t} else if (importType === 'ec') {\n\t\t\t\treturn <ImportEcForm handleNext={handleNext} handleBack={handleBack} />;\n\t\t\t} else if (importType === 'new') {\n\t\t\t\treturn (\n\t\t\t\t\t<NewSeedForm\n\t\t\t\t\t\tsetMnemonic={setMnemonic}\n\t\t\t\t\t\tmnemonic={mnemonic}\n\t\t\t\t\t\thandleNext={handleNext}\n\t\t\t\t\t\thandleBack={handleBack}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else if (importType === 'importSeed') {\n\t\t\t\treturn (\n\t\t\t\t\t<ImportSeedForm\n\t\t\t\t\t\tsetMnemonic={setMnemonic}\n\t\t\t\t\t\thandleNext={handleNext}\n\t\t\t\t\t\thandleBack={handleBack}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else if (importType === 'ledger') {\n\t\t\t\treturn (\n\t\t\t\t\t<LedgerForm\n\t\t\t\t\t\thandleNext={handleNext}\n\t\t\t\t\t\thandleBack={handleBack}\n\t\t\t\t\t\ttype=\"fct\"\n\t\t\t\t\t\tkey=\"fctLedgerForm\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif (importType === 'new' || importType === 'importSeed') {\n\t\t\t\treturn (\n\t\t\t\t\t<SeedForm\n\t\t\t\t\t\tmnemonic={mnemonic}\n\t\t\t\t\t\thandleNext={handleNext}\n\t\t\t\t\t\ttype=\"fct\"\n\t\t\t\t\t\tkey=\"fctSeedForm\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tif (importType === 'new' || importType === 'importSeed') {\n\t\t\t\treturn (\n\t\t\t\t\t<SeedForm\n\t\t\t\t\t\tmnemonic={mnemonic}\n\t\t\t\t\t\thandleNext={handleNext}\n\t\t\t\t\t\thandleBack={handleBack}\n\t\t\t\t\t\ttype=\"ec\"\n\t\t\t\t\t\tkey=\"ecSeedForm\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn 'Unknown step';\n\t}\n}\nexport default AddWalletStepContent;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withNetwork } from '../context/NetworkContext';\nimport _flowRight from 'lodash/flowRight';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddWalletStepContent from './AddWalletStepContent';\nimport SectionHeader from '../component/form/SectionHeader';\nimport Paper from '@material-ui/core/Paper';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withWalletContext } from '../context/WalletContext';\n\nconst getStandardSteps = () => {\n\treturn ['Import Method', 'Address details'];\n};\n\nconst getLedgerAddressSteps = (networkProps) => {\n\treturn ['Import Method', networkProps.factoidAbbreviationFull];\n};\n\nconst getSeedAddressSteps = (networkProps) => {\n\treturn [\n\t\t'Import Method',\n\t\t'Seed Value',\n\t\tnetworkProps.factoidAbbreviationFull,\n\t\tnetworkProps.ecAbbreviationFull,\n\t];\n};\n\nconst stepMap = {\n\timportSeed: getSeedAddressSteps,\n\tnew: getSeedAddressSteps,\n\tledger: getLedgerAddressSteps,\n\tfct: getStandardSteps,\n\tec: getStandardSteps,\n};\n\nfunction AddWalletStepper(props) {\n\tconst [activeStep, setActiveStep] = useState(0);\n\tconst [importType, setImportType] = useState('fct');\n\tconst [getSteps, setGetSteps] = useState(() => getStandardSteps);\n\n\tfunction handleReset() {\n\t\tsetActiveStep(0);\n\t\tsetImportType('fct');\n\t\tsetGetSteps(() => getStandardSteps);\n\t}\n\n\tfunction updateImportType(importType) {\n\t\tsetImportType(importType);\n\t\tsetGetSteps(() => stepMap[importType]);\n\t}\n\n\tfunction handleNext() {\n\t\tsetActiveStep(activeStep + 1);\n\t}\n\n\tfunction handleBack() {\n\t\tsetActiveStep(activeStep - 1);\n\t}\n\n\tconst {\n\t\tclasses,\n\t\thandleClose,\n\t\thandleCloseText,\n\t\tnetworkController: { networkProps },\n\t\twalletController: { isWalletEmpty },\n\t} = props;\n\n\tconst steps = getSteps(networkProps);\n\n\tconst sectionHeaderText =\n\t\tnetworkProps.network === 'testnet' ? 'Add Testnet Address' : 'Add Address';\n\n\treturn (\n\t\t<Paper className={classes.paper} elevation={2}>\n\t\t\t<SectionHeader text={sectionHeaderText} id=\"modal-title\" />\n\t\t\t<Stepper activeStep={activeStep} className={classes.stepper}>\n\t\t\t\t{steps.map((label) => {\n\t\t\t\t\tconst props = {};\n\t\t\t\t\tconst labelProps = {};\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Step key={label} {...props}>\n\t\t\t\t\t\t\t<StepLabel {...labelProps}>{label}</StepLabel>\n\t\t\t\t\t\t</Step>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Stepper>\n\n\t\t\t{activeStep === steps.length ? (\n\t\t\t\t<>\n\t\t\t\t\t<br />\n\t\t\t\t\t<FinalStep\n\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\tisWalletEmpty={isWalletEmpty()}\n\t\t\t\t\t\tnetwork={networkProps.network}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{!isWalletEmpty() ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Button onClick={handleReset}>Add Another</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{handleCloseText}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={handleReset}>\n\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<br />\n\t\t\t\t\t<AddWalletStepContent\n\t\t\t\t\t\tactiveStep={activeStep}\n\t\t\t\t\t\tupdateImportType={updateImportType}\n\t\t\t\t\t\thandleNext={handleNext}\n\t\t\t\t\t\thandleBack={handleBack}\n\t\t\t\t\t\timportType={importType}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Paper>\n\t);\n}\nAddWalletStepper.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst FinalStep = ({ classes, isWalletEmpty, network }) => {\n\tif (isWalletEmpty) {\n\t\treturn (\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\tNo Addresses have been added.\n\t\t\t</Typography>\n\t\t);\n\t} else if (network === 'mainnet') {\n\t\treturn (\n\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\tYou have finished adding an address.\n\t\t\t</Typography>\n\t\t);\n\t} else if (network === 'testnet') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\t\tYou have finished adding a Testnet address.\n\t\t\t\t</Typography>\n\t\t\t\t<Paper className={classes.testnetWarning} elevation={2}>\n\t\t\t\t\t<Typography className={classes.warningText}>\n\t\t\t\t\t\t<WarningIcon className={classes.warningIcon} />\n\t\t\t\t\t\t&nbsp;&nbsp;Use these addresses for Testnet ONLY. Do not send real\n\t\t\t\t\t\tFactoids to these addresses, or you run the risk of losing them.\n\t\t\t\t\t\tPlease read all notices.\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tYou can use the{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\thref={'https://faucet.factoid.org/'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFactom Testnet Faucet{' '}\n\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tto receive Testoids.\n\t\t\t\t\t</Typography>\n\t\t\t\t</Paper>\n\t\t\t</>\n\t\t);\n\t}\n};\n\nconst styles = (theme) => ({\n\tstepper: {\n\t\tbackgroundColor: '#eeeeee',\n\t},\n\tpaper: {\n\t\tminWidth: 565,\n\t\tpadding: theme.spacing(4),\n\t\tminHeight: 300,\n\t},\n\ttestnetWarning: {\n\t\tborderColor: '#ffa000',\n\t\tborderStyle: 'solid',\n\t\tpadding: 5,\n\t\twidth: 415,\n\t},\n\twarningIcon: {\n\t\tcolor: '#ffa000',\n\t\tdisplay: 'inline',\n\t\tposition: 'relative',\n\t\ttop: '6px',\n\t},\n\twarningText: {\n\t\tdisplay: 'inline',\n\t},\n});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(AddWalletStepper);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport AddWalletStepper from './AddWalletStepper';\n\nfunction AddWalletModal(props) {\n\tconst classes = props.classes;\n\tconst [isOpen, setOpen] = useState(false);\n\n\treturn (\n\t\t<div className={classes.center}>\n\t\t\t<Button\n\t\t\t\tonClick={() => setOpen(true)}\n\t\t\t\tclassName={classes.button}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t>\n\t\t\t\tAdd Address\n\t\t\t</Button>\n\t\t\t<Modal\n\t\t\t\taria-labelledby=\"modal-title\"\n\t\t\t\topen={isOpen}\n\t\t\t\tonClose={() => setOpen(false)}\n\t\t\t>\n\t\t\t\t<div className={classes.modalContent}>\n\t\t\t\t\t<AddWalletStepper\n\t\t\t\t\t\thandleClose={() => setOpen(false)}\n\t\t\t\t\t\thandleCloseText=\"Exit\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}\nAddWalletModal.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tmodalContent: {\n\t\tposition: 'absolute',\n\t\tboxShadow: theme.shadows[5],\n\t\ttop: `50%`,\n\t\tleft: `50%`,\n\t\ttransform: `translate(-50%, -50%)`,\n\t\tminWidth: '490px',\n\t},\n\tbutton: {\n\t\twidth: '275px;',\n\t\theight: '50px',\n\t\tmarginBottom: '15px',\n\t},\n\tcenter: {\n\t\tmargin: '0 auto',\n\t},\n});\n\nexport default withStyles(styles)(AddWalletModal);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isNil from 'lodash/isNil';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddWalletModal from '../addWallet/AddWalletModal.js';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormatBalance from './shared/BalanceFormatter.js';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport _isEmpty from 'lodash/isEmpty';\nimport ledgerLogo from '../component/logo/ledgerLogo.svg';\nimport { GiAcorn } from 'react-icons/gi';\nimport { IoIosKey } from 'react-icons/io';\n\nfunction Sidebar(props) {\n\tconst {\n\t\tclasses,\n\t\twalletController: {\n\t\t\tgetEntryCreditAddresses,\n\t\t\tgetFactoidAddresses,\n\t\t\tactiveAddressIndex_o,\n\t\t\tselectAddress,\n\t\t},\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\tconst ecAddresses = getEntryCreditAddresses();\n\tconst factoidAddresses = getFactoidAddresses();\n\n\tconst addressContainer = { paddingRight: '0px' };\n\n\tconst listfactoidAddresses = factoidAddresses.map(function(wallet, index) {\n\t\tconst expanded =\n\t\t\tactiveAddressIndex_o.index === index &&\n\t\t\tactiveAddressIndex_o.type === 'fct';\n\t\tconst nicknameStyle = expanded ? { fontWeight: 500 } : {};\n\n\t\treturn (\n\t\t\t<ExpansionPanel\n\t\t\t\tkey={index}\n\t\t\t\texpanded={expanded}\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tawait selectAddress(index, 'fct');\n\t\t\t\t}}\n\t\t\t\tclassName={expanded ? classes.expanded : ''}\n\t\t\t\tdata-cy={`sidebarFctIndex_${index}`}\n\t\t\t>\n\t\t\t\t<ExpansionPanelSummary className={classes.addressSummary}>\n\t\t\t\t\t<Grid container justify=\"space-between\" style={addressContainer}>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tclassName={classes.break}\n\t\t\t\t\t\t\t\tstyle={nicknameStyle}\n\t\t\t\t\t\t\t\tdata-cy=\"sidebarFctNickname\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{wallet.nickname}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{!_isNil(wallet.balance) && (\n\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={classes.break}\n\t\t\t\t\t\t\t\t\tdata-cy=\"sidebarFctBalance\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FormatBalance balance={wallet.balance} type=\"fct\" />\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<StyledAddressIcon importType={wallet.importType} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</ExpansionPanelSummary>\n\t\t\t</ExpansionPanel>\n\t\t);\n\t});\n\n\tconst listecAddresses = ecAddresses.map(function(wallet, index) {\n\t\tconst expanded =\n\t\t\tactiveAddressIndex_o.index === index &&\n\t\t\tactiveAddressIndex_o.type === 'ec';\n\n\t\tconst nicknameStyle = expanded ? { fontWeight: 500 } : {};\n\n\t\treturn (\n\t\t\t<ExpansionPanel\n\t\t\t\tkey={index}\n\t\t\t\texpanded={expanded}\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tawait selectAddress(index, 'ec');\n\t\t\t\t}}\n\t\t\t\tclassName={expanded ? classes.expanded : ''}\n\t\t\t\tdata-cy={`sidebarEcIndex_${index}`}\n\t\t\t>\n\t\t\t\t<ExpansionPanelSummary className={classes.addressSummary}>\n\t\t\t\t\t<Grid container justify=\"space-between\" style={addressContainer}>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tclassName={classes.break}\n\t\t\t\t\t\t\t\tstyle={nicknameStyle}\n\t\t\t\t\t\t\t\tdata-cy=\"sidebarEcNickname\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{wallet.nickname}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{!_isNil(wallet.balance) && (\n\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={classes.break}\n\t\t\t\t\t\t\t\t\tdata-cy=\"sidebarEcBalance\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FormatBalance balance={wallet.balance} type=\"ec\" />\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<StyledAddressIcon importType={wallet.importType} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</ExpansionPanelSummary>\n\t\t\t</ExpansionPanel>\n\t\t);\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t{!_isEmpty(factoidAddresses) && (\n\t\t\t\t<Paper className={classes.noPadding} elevation={2}>\n\t\t\t\t\t<List className={classes.addressList}>\n\t\t\t\t\t\t<ListItem className={classes.walletListHeader}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tclassName={classes.addressHeading}\n\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{networkProps.factoidAbbreviationFull + ' Addresses'}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t\t<ListItem disableGutters className={classes.walletList}>\n\t\t\t\t\t\t\t<div data-cy=\"fctAddressList\" className={classes.listAddrRoot}>\n\t\t\t\t\t\t\t\t{listfactoidAddresses}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t</List>\n\t\t\t\t</Paper>\n\t\t\t)}\n\t\t\t{!_isEmpty(ecAddresses) && (\n\t\t\t\t<>\n\t\t\t\t\t{!_isEmpty(factoidAddresses) && <br />}\n\t\t\t\t\t<Paper className={classes.noPadding} elevation={2}>\n\t\t\t\t\t\t<List className={classes.addressList}>\n\t\t\t\t\t\t\t<ListItem className={classes.walletListHeader}>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={classes.addressHeading}\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{networkProps.ecAbbreviationFull + ' Addresses'}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem disableGutters className={classes.walletList}>\n\t\t\t\t\t\t\t\t<div data-cy=\"ecAddressList\" className={classes.listAddrRoot}>\n\t\t\t\t\t\t\t\t\t{listecAddresses}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Paper>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<br />\n\t\t\t<div className={classes.flex}>\n\t\t\t\t<br />\n\t\t\t\t<AddWalletModal />\n\t\t\t</div>\n\t\t</>\n\t);\n}\nSidebar.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tnoPadding: {\n\t\tpadding: '0px',\n\t},\n\tbreak: {\n\t\twordWrap: 'break-word',\n\t},\n\texpanded: {\n\t\tbackgroundColor: 'aliceblue',\n\t},\n\ticonContainer: {\n\t\tpaddingTop: '2px',\n\t},\n\tlistAddrRoot: {\n\t\twidth: '100%',\n\t\tposition: 'relative',\n\t\toverflow: 'auto',\n\t\tmaxHeight: 270,\n\t},\n\taddressSummary: {\n\t\tpadding: '0 0 0 24px',\n\t},\n\taddressHeading: {\n\t\tfontWeight: 500,\n\t},\n\tflex: {\n\t\tdisplay: 'flex',\n\t},\n\twalletList: {\n\t\tpadding: '6px',\n\t},\n\twalletListHeader: {\n\t\tpaddingTop: '5px',\n\t\tpaddingBottom: '5px',\n\t},\n\taddressList: {\n\t\tpaddingBottom: '0px',\n\t\tbackgroundColor: '#ddd',\n\t\tborderRadius: '4px',\n\t},\n});\n\nconst AddressIcon = (props) => {\n\tconst { classes, importType } = props;\n\n\treturn (\n\t\t<Grid item xs={1} className={classes.iconContainer}>\n\t\t\t{importType === 'seed' && <GiAcorn className={classes.sidebarIcon} />}\n\t\t\t{importType === 'ledger' && (\n\t\t\t\t<img\n\t\t\t\t\tclassName={classes.ledgerLogo}\n\t\t\t\t\tsrc={ledgerLogo}\n\t\t\t\t\talt=\"ledger icon\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{importType === 'standard' && (\n\t\t\t\t<IoIosKey className={classes.sidebarIcon} />\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n\nconst StyledAddressIcon = withStyles({\n\tledgerLogo: {\n\t\theight: 15,\n\t\topacity: '62%',\n\t},\n\tsidebarIcon: {\n\t\theight: 16,\n\t\topacity: '62%',\n\t},\n})(AddressIcon);\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(Sidebar);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { addBig, toFactoids } from '../utils';\n\nconst SendTransactionPreview = (props) => {\n\tconst { factoidAmount, classes, networkProps, sendFactoshiFee } = props;\n\tconst sendFactoidFee = toFactoids(sendFactoshiFee);\n\n\t// total send amount\n\tconst totalFactoidAmount = addBig(factoidAmount, sendFactoidFee);\n\n\tconst transferFactoidAmountText = factoidAmount.toLocaleString(undefined, {\n\t\tmaximumFractionDigits: 8,\n\t});\n\n\tconst totalFactoidAmountText = `${totalFactoidAmount.toLocaleString(\n\t\tundefined,\n\t\t{\n\t\t\tmaximumFractionDigits: 8,\n\t\t}\n\t)} ${networkProps.factoidAbbreviation}`;\n\n\tconst feeFactoidAmountText = `${sendFactoidFee.toLocaleString(undefined, {\n\t\tmaximumFractionDigits: 8,\n\t})} ${networkProps.factoidAbbreviation}`;\n\n\treturn (\n\t\t<Paper className={classes.root} elevation={2}>\n\t\t\t<div>Transaction Preview</div>\n\t\t\t<span\n\t\t\t\tdata-cy=\"previewAmount\"\n\t\t\t\tclassName={classes.transferFactoidAmountText}\n\t\t\t>\n\t\t\t\t{transferFactoidAmountText}\n\t\t\t</span>\n\t\t\t<span className={classes.transferFactoidUnitText}>\n\t\t\t\t{' ' + networkProps.factoidAbbreviation}\n\t\t\t</span>\n\t\t\t<hr className={classes.divider} />\n\t\t\t<div className={classes.detail}>\n\t\t\t\t<div>Total Amount:</div>\n\t\t\t\t<div\n\t\t\t\t\tdata-cy=\"previewTotalAmount\"\n\t\t\t\t\tclassName={classes.factoidAmountSmallText}\n\t\t\t\t>\n\t\t\t\t\t{totalFactoidAmountText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.detail}>\n\t\t\t\t<div>Network Fee:</div>\n\t\t\t\t<div data-cy=\"networkFee\" className={classes.factoidAmountSmallText}>\n\t\t\t\t\t{feeFactoidAmountText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Paper>\n\t);\n};\nSendTransactionPreview.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\nconst styles = {\n\troot: {\n\t\twidth: '75%',\n\t\tmargin: '0 auto',\n\t\tpaddingTop: '26px',\n\t\tpaddingBottom: '16px',\n\t\tmarginTop: '39px',\n\t\tborderRadius: '10px',\n\t\tbackgroundColor: '#eef1f4',\n\t\ttextAlign: 'center',\n\t},\n\ttransferFactoidAmountText: {\n\t\tfontSize: '50px',\n\t\tcolor: '#007eff',\n\t},\n\ttransferFactoidUnitText: {\n\t\twidth: '55px',\n\t\theight: '24px',\n\t\tfontSize: '20px',\n\t\tcolor: '#007eff',\n\t},\n\tfactoidAmountSmallText: {\n\t\tcolor: '#001830',\n\t\tpaddingTop: '7px',\n\t},\n\tdetail: {\n\t\tdisplay: 'inline-block',\n\t\tpaddingLeft: '30px',\n\t\tpaddingRight: '30px',\n\t},\n\tdivider: {\n\t\twidth: '50%',\n\t\topacity: 0.15,\n\t\tborder: 'solid 1px #103152',\n\t},\n};\n\nconst enhancer = _flowRight(withStyles(styles));\n\nexport default enhancer(SendTransactionPreview);\n","import React from 'react';\n\nexport const SVGLogo = ({ alt, className, onClick, src }) => {\n\treturn <img alt={alt} className={className} onClick={onClick} src={src} />;\n};\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isNil from 'lodash/isNil';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FormatBalance from './BalanceFormatter.js';\nimport { withWalletContext } from '../../context/WalletContext';\nimport { withLedger } from '../../context/LedgerContext';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport LedgerLogo from '../../component/logo/ledgerLogo.svg';\nimport { SVGLogo } from '../../component/logo/SVGLogo';\n\nconst AddressInfoHeader = (props) => {\n\tconst {\n\t\tclasses,\n\t\twalletController: { getActiveAddress, activeAddressIndex_o },\n\t\tledgerController: { checkAddress },\n\t} = props;\n\n\tconst activeAddress_o = getActiveAddress();\n\n\treturn (\n\t\t<Paper className={classes.paper}>\n\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tdata-cy=\"addressNickname\"\n\t\t\t\t\t\tclassName={classes.bold}\n\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t>\n\t\t\t\t\t\t{activeAddress_o.nickname}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{!_isNil(activeAddress_o.balance) && (\n\t\t\t\t\t\t<Typography data-cy=\"balance\" variant=\"h4\">\n\t\t\t\t\t\t\t<FormatBalance\n\t\t\t\t\t\t\t\tbalance={activeAddress_o.balance}\n\t\t\t\t\t\t\t\ttype={activeAddressIndex_o.type}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t\t<Typography data-cy=\"address\">\n\t\t\t\t\t\t{activeAddress_o.address}\n\t\t\t\t\t\t<CopyToClipboard text={activeAddress_o.address}>\n\t\t\t\t\t\t\t<Tooltip title=\"Copy\" className={classes.pointer}>\n\t\t\t\t\t\t\t\t<SvgIcon fontSize=\"inherit\" color=\"primary\">\n\t\t\t\t\t\t\t\t\t<path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\n\t\t\t\t\t\t\t\t</SvgIcon>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t{activeAddress_o.importType === 'ledger' && (\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle=\"Verify Ledger Nano X/S Address\"\n\t\t\t\t\t\t\tclassName={classes.pointer}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className={classes.logoBackground}>\n\t\t\t\t\t\t\t\t<SVGLogo\n\t\t\t\t\t\t\t\t\tclassName={classes.logo}\n\t\t\t\t\t\t\t\t\tsrc={LedgerLogo}\n\t\t\t\t\t\t\t\t\talt=\"Ledger Logo\"\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tawait checkAddress(\n\t\t\t\t\t\t\t\t\t\t\tactiveAddress_o,\n\t\t\t\t\t\t\t\t\t\t\tactiveAddressIndex_o.type\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\nconst styles = () => ({\n\tledgerLogo: {\n\t\theight: 15,\n\t\topacity: '62%',\n\t},\n\tsidebarIcon: {\n\t\theight: 16,\n\t\topacity: '62%',\n\t},\n\tpaper: {\n\t\ttextAlign: 'left',\n\t\tbackgroundColor: 'aliceblue',\n\t\tpadding: '16px',\n\t\tmarginBottom: '3px',\n\t\tboxShadow:\n\t\t\t'inset 0px 0px 5px 0px rgba(0,0,0,0.2), inset 0px 0px 2px 0px rgba(0,0,0,0.14), inset 0px 0px 1px -2px rgba(0,0,0,0.12)',\n\t},\n\tpointer: {\n\t\tcursor: 'pointer',\n\t},\n\tlogo: { height: 15 },\n\tlogoBackground: {\n\t\tbackground: '#3f51b545',\n\t\tpadding: '10px',\n\t\tborderRadius: '50%',\n\t\tpaddingBottom: '5px',\n\t},\n\tbold: { fontWeight: 500 },\n});\n\nconst enhancer = _flowRight(withWalletContext, withLedger, withStyles(styles));\n\nexport default enhancer(AddressInfoHeader);\n","import React, { useContext } from 'react';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nconst TransactionMessage = ({ transactionID }) => {\n\tconst { networkProps } = useContext(NetworkContext);\n\n\tconst href =\n\t\tnetworkProps.explorerURL +\n\t\tnetworkProps.transactionUrlSuffix +\n\t\ttransactionID;\n\n\tif (networkProps.network === 'mainnet') {\n\t\treturn <MainnetMessage href={href} />;\n\t} else if (networkProps.network === 'testnet') {\n\t\treturn <TestnetMessage href={href} />;\n\t}\n};\n\nconst MainnetMessage = ({ href }) => (\n\t<Typography>\n\t\tThe transaction status is available in the{' '}\n\t\t<Tooltip title=\"Open Factom Explorer\">\n\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={href}>\n\t\t\t\tFactom Explorer.\n\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\n\t\t\t</a>\n\t\t</Tooltip>{' '}\n\t\tFunds are available for use immediately.\n\t\t<br />\n\t</Typography>\n);\n\nconst TestnetMessage = ({ href }) => (\n\t<Typography>\n\t\tThis transaction will be visible{' '}\n\t\t<Tooltip title=\"Open Factom Explorer\">\n\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={href}>\n\t\t\t\there <OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\n\t\t\t</a>\n\t\t</Tooltip>{' '}\n\t\tin 10-15 minutes, after being included in the next Factom block currently\n\t\tbeing processed by the blockchain. Funds are available for use immediately.\n\t\t<br />\n\t</Typography>\n);\n\nexport default TransactionMessage;\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isNil from 'lodash/isNil';\nimport _get from 'lodash/get';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isValidPublicFctAddress } from 'factom/dist/factom';\nimport { withFactomCli } from '../context/FactomCliContext';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withSeed } from '../context/SeedContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport { withLedger } from '../context/LedgerContext';\nimport SendTransactionPreview from './SendTransactionPreview';\nimport AddressInfoHeader from './shared/AddressInfoHeader';\nimport TransactionMessage from './shared/TransactionMessage';\nimport { ADDRESS_LENGTH, FACTOID_REGEX } from '../constants/WALLET_CONSTANTS';\nimport { toFactoshis, toFactoids, minusBig } from '../utils';\n\n/**\n * Constants\n */\nconst sendFactoidAmountPath = 'sendFactoidAmount';\nconst recipientAddressPath = 'recipientAddress';\nconst myFctWalletAnchorElPath = 'myFctWalletAnchorEl';\nconst privateKeyPath = 'privateKey';\nconst seedPath = 'seed';\nconst walletImportTypePath = 'walletImportType';\n\nclass SendFactoidForm extends Component {\n\tstate = { sendFactoshiFee: null };\n\n\tasync componentDidMount() {\n\t\tconst sendFactoshiFee = await this.props.walletController.getFactoshiFee();\n\t\tthis.setState({ sendFactoshiFee });\n\t}\n\n\tinsufficientFundsMessage = () => {\n\t\treturn `Insufficient Funds (Transaction Fee is ${toFactoids(\n\t\t\tthis.state.sendFactoshiFee\n\t\t)} ${this.props.networkController.networkProps.factoidAbbreviation})`;\n\t};\n\n\tgetMaxFactoshis = (balance, fee) => {\n\t\tconst maxFactoshis = minusBig(balance, fee);\n\t\tif (maxFactoshis < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn maxFactoshis;\n\t};\n\n\tverifyKey = (privateKey) => {\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\n\n\t\treturn this.props.walletController.verifyKey(privateKey, activeAddress_o);\n\t};\n\n\tverifySeed = (seed) => {\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\n\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\tfactomCliController: { factomCli },\n\t\t\twalletController: {\n\t\t\t\tgetFactoidAddresses,\n\t\t\t\tgetActiveAddress,\n\t\t\t\tupdateBalances,\n\t\t\t\tactiveAddressIndex_o,\n\t\t\t\taddAddressTransaction,\n\t\t\t},\n\t\t\tledgerController: { signTransaction },\n\t\t\tnetworkController: { networkProps },\n\t\t\tseedController: { signWithSeed },\n\t\t} = this.props;\n\n\t\tconst factoidAddresses = getFactoidAddresses();\n\t\tconst activeAddress_o = getActiveAddress();\n\n\t\tlet maxAmount;\n\t\tif (this.state.sendFactoshiFee != null && activeAddress_o.balance != null) {\n\t\t\tconst maxFactoshis = this.getMaxFactoshis(\n\t\t\t\tactiveAddress_o.balance,\n\t\t\t\tthis.state.sendFactoshiFee\n\t\t\t);\n\t\t\tmaxAmount = toFactoids(maxFactoshis);\n\t\t}\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\tsendFactoidAmount: '',\n\t\t\t\t\trecipientAddress: '',\n\t\t\t\t\tmyFctWalletAnchorEl: null,\n\t\t\t\t\t[privateKeyPath]: '',\n\t\t\t\t\t[seedPath]: '',\n\t\t\t\t\t[walletImportTypePath]: activeAddress_o.importType,\n\t\t\t\t\ttransactionID: null,\n\t\t\t\t\tledgerStatus: null,\n\t\t\t\t\ttransactionError: null,\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tsendFactoidAmount,\n\t\t\t\t\t\trecipientAddress,\n\t\t\t\t\t\tprivateKey,\n\t\t\t\t\t\tseed,\n\t\t\t\t\t} = values;\n\t\t\t\t\tlet transaction = {};\n\t\t\t\t\tconst importType = _get(values, walletImportTypePath);\n\t\t\t\t\tconst amount = toFactoshis(sendFactoidAmount);\n\t\t\t\t\tconst toAddr = recipientAddress;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (importType === 'standard') {\n\t\t\t\t\t\t\ttransaction = await factomCli.createFactoidTransaction(\n\t\t\t\t\t\t\t\tprivateKey,\n\t\t\t\t\t\t\t\ttoAddr,\n\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (importType === 'seed') {\n\t\t\t\t\t\t\tconst mnemonic = seed.trim();\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\n\t\t\t\t\t\t\tconst type = 'sendFCT';\n\n\t\t\t\t\t\t\tconst seedTrans_o = {\n\t\t\t\t\t\t\t\tmnemonic,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\ttoAddr,\n\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttransaction = await signWithSeed(seedTrans_o);\n\t\t\t\t\t\t} else if (importType === 'ledger') {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t'ledgerStatus',\n\t\t\t\t\t\t\t\t'Please open the Factom app on your Ledger device and confirm the transaction.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst fromAddr = activeAddress_o.address;\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\n\n\t\t\t\t\t\t\tconst ledgerTrans_o = {\n\t\t\t\t\t\t\t\tfromAddr,\n\t\t\t\t\t\t\t\ttoAddr,\n\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttransaction = await signTransaction(ledgerTrans_o);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst txId = await factomCli.sendTransaction(transaction);\n\t\t\t\t\t\tawait addAddressTransaction(activeAddressIndex_o, txId);\n\n\t\t\t\t\t\tactions.setFieldValue('transactionID', txId);\n\t\t\t\t\t\tupdateBalances();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\tactions.resetForm();\n\n\t\t\t\t\t\tif (importType === 'ledger') {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t'transactionError',\n\t\t\t\t\t\t\t\t'An error occured. Please open the Factom app on your Ledger device and try again.'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t'transactionError',\n\t\t\t\t\t\t\t\t'An error occured. Please try again.'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[recipientAddressPath]: Yup.string()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\trecipientAddressPath,\n\t\t\t\t\t\t\t'Invalid Address',\n\t\t\t\t\t\t\tisValidPublicFctAddress\n\t\t\t\t\t\t),\n\t\t\t\t\t[sendFactoidAmountPath]: Yup.number()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.typeError('Must be a number')\n\t\t\t\t\t\t.positive('Must be greater than 0')\n\t\t\t\t\t\t.test(sendFactoidAmountPath, 'Limit 8 decimal places', (value) =>\n\t\t\t\t\t\t\t(value + '').match(FACTOID_REGEX)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.max(maxAmount, this.insufficientFundsMessage),\n\t\t\t\t\t[walletImportTypePath]: Yup.string(),\n\t\t\t\t\t[privateKeyPath]: Yup.string().when(walletImportTypePath, {\n\t\t\t\t\t\tis: 'standard',\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(privateKeyPath, 'Invalid Key', this.verifyKey),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t\t[seedPath]: Yup.string().when(walletImportTypePath, {\n\t\t\t\t\t\tis: 'seed',\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleReset,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tisValid,\n\t\t\t\t}) => (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddressInfoHeader />\n\t\t\t\t\t\t<Field name={recipientAddressPath}>\n\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors[recipientAddressPath] &&\n\t\t\t\t\t\t\t\t\t\ttouched[recipientAddressPath]\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t'Recipient ' + networkProps.factoidAbbreviation + ' address'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t'Enter ' + networkProps.factoidAbbreviationFull + ' Address'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\t\t\t\t\tmaxLength: ADDRESS_LENGTH,\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={recipientAddressPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<FactoidAddressMenu\n\t\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\tfactoidAddresses={factoidAddresses}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\taria-owns={\n\t\t\t\t\t\t\t\t\t\tvalues[myFctWalletAnchorElPath] ? 'simple-menu' : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\tmyFctWalletAnchorElPath,\n\t\t\t\t\t\t\t\t\t\t\t\tevent.currentTarget\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSend to one of my addresses\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Field name={sendFactoidAmountPath}>\n\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors[sendFactoidAmountPath] &&\n\t\t\t\t\t\t\t\t\t\ttouched[sendFactoidAmountPath]\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t'Enter Amount (' + networkProps.factoidAbbreviation + ')'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel=\"Amount\"\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={sendFactoidAmountPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(sendFactoidAmountPath, maxAmount);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUse Max\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'standard' && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Field name={privateKeyPath}>\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\terrors[privateKeyPath] && touched[privateKeyPath]\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Private Key for ' + activeAddress_o.nickname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Private Key\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: ADDRESS_LENGTH,\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={privateKeyPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'seed' && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Field name={seedPath}>\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, seedPath) && _get(touched, seedPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={seedPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{values.sendFactoidAmount && isValid ? (\n\t\t\t\t\t\t\t<SendTransactionPreview\n\t\t\t\t\t\t\t\tnetworkProps={networkProps}\n\t\t\t\t\t\t\t\tfactoidAmount={values.sendFactoidAmount}\n\t\t\t\t\t\t\t\tsendFactoshiFee={this.state.sendFactoshiFee}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{!_isNil(values.transactionError) && (\n\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\n\t\t\t\t\t\t\t\t{values.transactionError}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{isSubmitting ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{values.transactionID !== null ? (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction} elevation={2}>\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Transaction ID:</b> {values.transactionID}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<TransactionMessage\n\t\t\t\t\t\t\t\t\t\t\t\ttransactionID={values.transactionID}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tNew Transaction\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\n\t\t\t\t\t\t\t\t\t\t{values.ledgerStatus}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{'Send ' + networkProps.factoidAbbreviationFull + 's'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tPlease verify all details are correct before hitting send.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tNobody can reverse mistaken transactions.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nfunction FactoidAddressMenu(props) {\n\tconst { values, setFieldValue, factoidAddresses } = props;\n\n\tconst addressList = factoidAddresses.map((address_o, index) => (\n\t\t<MenuItem\n\t\t\tkey={index}\n\t\t\tonClick={() => {\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\n\t\t\t\tsetFieldValue(recipientAddressPath, address_o.address);\n\t\t\t}}\n\t\t>\n\t\t\t{address_o.nickname}\n\t\t</MenuItem>\n\t));\n\treturn (\n\t\t<Menu\n\t\t\tid=\"simple-menu\"\n\t\t\tanchorEl={values[myFctWalletAnchorElPath]}\n\t\t\topen={Boolean(values[myFctWalletAnchorElPath])}\n\t\t\tonClose={() => {\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\n\t\t\t}}\n\t\t>\n\t\t\t{addressList}\n\t\t</Menu>\n\t);\n}\n\nSendFactoidForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = {\n\tsendButton: {\n\t\twidth: '50%',\n\t},\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\n\tpointer: {\n\t\tcursor: 'pointer',\n\t},\n\ttransaction: {\n\t\tborderColor: '#6fbf73',\n\t\tborderStyle: 'solid',\n\n\t\tpaddingTop: 3,\n\t\tpaddingBottom: 8,\n\t},\n\tsuccessIcon: {\n\t\tposition: 'relative',\n\t\ttop: '5px',\n\t},\n};\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithLedger,\n\twithSeed,\n\twithWalletContext,\n\twithFactomCli,\n\twithStyles(styles)\n);\n\nexport default enhancer(SendFactoidForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\n\nimport { addBig } from '../utils';\n\nconst ConvertTransactionPreview = (props) => {\n\tconst {\n\t\tecAmount,\n\t\tfactoidAmount,\n\t\tclasses,\n\t\tnetworkProps,\n\t\tsendFactoidFee,\n\t} = props;\n\n\t// total send amount\n\tconst totalFactoidAmount = addBig(factoidAmount, sendFactoidFee);\n\n\t// format output\n\tconst convertECAmountText = ecAmount.toLocaleString(undefined, {\n\t\tmaximumFractionDigits: 8,\n\t});\n\n\tconst totalFactoidCostText =\n\t\ttotalFactoidAmount.toLocaleString(undefined, {\n\t\t\tmaximumFractionDigits: 8,\n\t\t}) +\n\t\t' ' +\n\t\tnetworkProps.factoidAbbreviation;\n\n\tconst feeFactoidAmountText =\n\t\tsendFactoidFee.toLocaleString(undefined, {\n\t\t\tmaximumFractionDigits: 8,\n\t\t}) +\n\t\t' ' +\n\t\tnetworkProps.factoidAbbreviation;\n\n\treturn (\n\t\t<Paper className={classes.root} elevation={2}>\n\t\t\t<div>Transaction Preview</div>\n\t\t\t<span data-cy=\"ecPreviewAmount\" className={classes.convertECAmountText}>\n\t\t\t\t{convertECAmountText}\n\t\t\t</span>\n\t\t\t<span className={classes.ecUnitText}>\n\t\t\t\t{' ' + networkProps.ecAbbreviation}\n\t\t\t</span>\n\t\t\t<hr className={classes.divider} />\n\t\t\t<div className={classes.detail}>\n\t\t\t\t<div>Total Cost:</div>\n\t\t\t\t<div\n\t\t\t\t\tdata-cy=\"ecPreviewTotalAmount\"\n\t\t\t\t\tclassName={classes.factoidCostSmallText}\n\t\t\t\t>\n\t\t\t\t\t{totalFactoidCostText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.detail}>\n\t\t\t\t<div>Network Fee:</div>\n\t\t\t\t<div data-cy=\"networkFee\" className={classes.factoidCostSmallText}>\n\t\t\t\t\t{feeFactoidAmountText}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Paper>\n\t);\n};\nConvertTransactionPreview.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\nconst styles = {\n\troot: {\n\t\twidth: '75%',\n\t\tmargin: '0 auto',\n\t\tpaddingTop: '26px',\n\t\tpaddingBottom: '16px',\n\t\tmarginTop: '39px',\n\t\tborderRadius: '10px',\n\t\tbackgroundColor: '#eef1f4',\n\t\ttextAlign: 'center',\n\t},\n\tconvertECAmountText: {\n\t\tfontSize: '50px',\n\t\tcolor: '#007eff',\n\t},\n\tecUnitText: {\n\t\twidth: '55px',\n\t\theight: '24px',\n\t\tfontSize: '20px',\n\t\tcolor: '#007eff',\n\t},\n\tfactoidCostSmallText: {\n\t\tcolor: '#001830',\n\t\tpaddingTop: '7px',\n\t},\n\tdetail: {\n\t\tdisplay: 'inline-block',\n\t\tpaddingLeft: '65px',\n\t\tpaddingRight: '65px',\n\t},\n\tdivider: {\n\t\twidth: '50%',\n\t\topacity: 0.15,\n\t\tborder: 'solid 1px #103152',\n\t},\n};\n\nconst enhancer = _flowRight(withStyles(styles));\n\nexport default enhancer(ConvertTransactionPreview);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isValidPublicEcAddress } from 'factom/dist/factom';\nimport Paper from '@material-ui/core/Paper';\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\nimport { ADDRESS_LENGTH } from '../constants/WALLET_CONSTANTS';\nimport { toFactoids, minusBig, divideBig } from '../utils';\nimport { withFactomCli } from '../context/FactomCliContext';\nimport { withLedger } from '../context/LedgerContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport { withSeed } from '../context/SeedContext';\nimport { withWalletContext } from '../context/WalletContext';\nimport AddressInfoHeader from './shared/AddressInfoHeader';\nimport TransactionMessage from './shared/TransactionMessage';\nimport ConvertTransactionPreview from './ConvertTransactionPreview';\n\n/**\n * Constants\n */\nconst entryCreditAmountPath = 'entryCreditAmount';\nconst recipientAddressPath = 'recipientAddress';\nconst myFctWalletAnchorElPath = 'myFctWalletAnchorEl';\nconst privateKeyPath = 'privateKey';\nconst walletImportTypePath = 'walletImportType';\nconst seedPath = 'seed';\n\nclass ConvertECForm extends Component {\n\tstate = { sendFactoshiFee: null, ecRate: null };\n\n\tasync componentDidMount() {\n\t\tconst sendFactoshiFee = await this.props.walletController.getFactoshiFee();\n\t\tconst ecRate = await this.props.walletController.getEntryCreditRate();\n\t\tthis.setState({ sendFactoshiFee, ecRate });\n\t}\n\n\tgetMaxEC(balance, fee) {\n\t\tconst maxFactoshis = minusBig(balance, fee);\n\t\tlet maxEntryCredits = divideBig(maxFactoshis, this.state.ecRate);\n\t\tif (maxEntryCredits < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn maxEntryCredits;\n\t}\n\n\tverifyKey = (privateKey) => {\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\n\n\t\treturn this.props.walletController.verifyKey(privateKey, activeAddress_o);\n\t};\n\n\tverifySeed = (seed) => {\n\t\tconst activeAddress_o = this.props.walletController.getActiveAddress();\n\n\t\treturn this.props.seedController.verifySeed(seed, activeAddress_o);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tclasses,\n\t\t\twalletController: {\n\t\t\t\tupdateBalances,\n\t\t\t\tgetEntryCreditAddresses,\n\t\t\t\tgetActiveAddress,\n\t\t\t\tactiveAddressIndex_o,\n\t\t\t\taddAddressTransaction,\n\t\t\t},\n\t\t\tledgerController: { signTransaction },\n\t\t\tfactomCliController: { factomCli },\n\t\t\tnetworkController: { networkProps },\n\t\t\tseedController: { signWithSeed },\n\t\t} = this.props;\n\n\t\tconst activeAddress_o = getActiveAddress();\n\t\tconst ecAddresses = getEntryCreditAddresses();\n\n\t\tlet maxAmount;\n\t\tif (\n\t\t\tthis.state.sendFactoshiFee != null &&\n\t\t\tactiveAddress_o.balance != null &&\n\t\t\tthis.state.ecRate != null\n\t\t) {\n\t\t\tmaxAmount = this.getMaxEC(\n\t\t\t\tactiveAddress_o.balance,\n\t\t\t\tthis.state.sendFactoshiFee\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\tentryCreditAmount: '',\n\t\t\t\t\trecipientAddress: '',\n\t\t\t\t\t[myFctWalletAnchorElPath]: null,\n\t\t\t\t\tprivateKey: '',\n\t\t\t\t\t[seedPath]: '',\n\t\t\t\t\t[walletImportTypePath]: activeAddress_o.importType,\n\t\t\t\t\ttransactionID: null,\n\t\t\t\t\tledgerStatus: null,\n\t\t\t\t\ttransactionError: null,\n\t\t\t\t\taddressToReinitialize: activeAddress_o.address,\n\t\t\t\t}}\n\t\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tentryCreditAmount,\n\t\t\t\t\t\trecipientAddress,\n\t\t\t\t\t\tprivateKey,\n\t\t\t\t\t\tseed,\n\t\t\t\t\t} = values;\n\t\t\t\t\tlet transaction = {};\n\t\t\t\t\tconst importType = _get(values, walletImportTypePath);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (importType === 'standard') {\n\t\t\t\t\t\t\ttransaction = await factomCli.createEntryCreditPurchaseTransaction(\n\t\t\t\t\t\t\t\tprivateKey,\n\t\t\t\t\t\t\t\trecipientAddress,\n\t\t\t\t\t\t\t\tentryCreditAmount\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (importType === 'seed') {\n\t\t\t\t\t\t\tconst mnemonic = seed.trim();\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\n\t\t\t\t\t\t\tconst amount = entryCreditAmount;\n\t\t\t\t\t\t\tconst type = 'convertFCT';\n\n\t\t\t\t\t\t\tconst seedTrans_o = {\n\t\t\t\t\t\t\t\tmnemonic,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\ttoAddr,\n\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttransaction = await signWithSeed(seedTrans_o);\n\t\t\t\t\t\t} else if (importType === 'ledger') {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t'ledgerStatus',\n\t\t\t\t\t\t\t\t'Please open the Factom app on your Ledger device and confirm the transaction.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst fromAddr = activeAddress_o.address;\n\t\t\t\t\t\t\tconst toAddr = recipientAddress;\n\t\t\t\t\t\t\tconst amount = Math.round(this.state.ecRate * entryCreditAmount);\n\t\t\t\t\t\t\tconst index = activeAddress_o.index;\n\n\t\t\t\t\t\t\tconst ledgerTrans_o = {\n\t\t\t\t\t\t\t\tfromAddr,\n\t\t\t\t\t\t\t\ttoAddr,\n\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttransaction = await signTransaction(ledgerTrans_o);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst txId = await factomCli.sendTransaction(transaction);\n\t\t\t\t\t\tawait addAddressTransaction(activeAddressIndex_o, txId);\n\n\t\t\t\t\t\tactions.setFieldValue('transactionID', txId);\n\t\t\t\t\t\tupdateBalances();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\tactions.resetForm();\n\n\t\t\t\t\t\tif (importType === 'ledger') {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t'transactionError',\n\t\t\t\t\t\t\t\t'An error occured. Please open the Factom app on your Ledger device and try again.'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactions.setFieldValue(\n\t\t\t\t\t\t\t\t'transactionError',\n\t\t\t\t\t\t\t\t'An error occured. Please try again.'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\t[recipientAddressPath]: Yup.string()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.test(\n\t\t\t\t\t\t\trecipientAddressPath,\n\t\t\t\t\t\t\t'Invalid Address',\n\t\t\t\t\t\t\tisValidPublicEcAddress\n\t\t\t\t\t\t),\n\t\t\t\t\t[entryCreditAmountPath]: Yup.number()\n\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t.typeError('Must be a number')\n\t\t\t\t\t\t.positive('Must be greater than 0')\n\t\t\t\t\t\t.integer('Must be a whole number')\n\t\t\t\t\t\t.max(maxAmount, 'Insufficient Funds'),\n\t\t\t\t\t[walletImportTypePath]: Yup.string(),\n\t\t\t\t\t[privateKeyPath]: Yup.string().when(walletImportTypePath, {\n\t\t\t\t\t\tis: 'standard',\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(privateKeyPath, 'Invalid Key', this.verifyKey),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t\t[seedPath]: Yup.string().when(walletImportTypePath, {\n\t\t\t\t\t\tis: 'seed',\n\t\t\t\t\t\tthen: Yup.string()\n\t\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t\t.required('Required')\n\t\t\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', this.verifySeed),\n\t\t\t\t\t\totherwise: Yup.string().notRequired(),\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\trender={({\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleReset,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tisValid,\n\t\t\t\t}) => (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddressInfoHeader />\n\t\t\t\t\t\t<Field name={recipientAddressPath}>\n\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors[recipientAddressPath] &&\n\t\t\t\t\t\t\t\t\t\ttouched[recipientAddressPath]\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t'Recipient ' + networkProps.ecAbbreviation + ' address'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t'Enter ' + networkProps.ecAbbreviationFull + ' address'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\t\t\t\t\tmaxLength: ADDRESS_LENGTH,\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={recipientAddressPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{!_isEmpty(ecAddresses) && (\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ECAddressMenu\n\t\t\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\t\t\tecAddresses={ecAddresses}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\t\taria-owns={\n\t\t\t\t\t\t\t\t\t\t\tvalues[myFctWalletAnchorElPath] ? 'simple-menu' : null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('transactionError', null);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyFctWalletAnchorElPath,\n\t\t\t\t\t\t\t\t\t\t\t\t\tevent.currentTarget\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.pointer}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSend to one of my addresses\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Field name={entryCreditAmountPath}>\n\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors[entryCreditAmountPath] &&\n\t\t\t\t\t\t\t\t\t\ttouched[entryCreditAmountPath]\n\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t'Enter Amount (' + networkProps.ecAbbreviation + ')'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel=\"Amount\"\n\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Grid container justify=\"space-between\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={entryCreditAmountPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'standard' && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Field name={privateKeyPath}>\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\terrors[privateKeyPath] && touched[privateKeyPath]\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Private Key for ' + activeAddress_o.nickname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Private Key\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tspellCheck: false,\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: ADDRESS_LENGTH,\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={privateKeyPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{_get(values, walletImportTypePath) === 'seed' && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Field name={seedPath}>\n\t\t\t\t\t\t\t\t\t{({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t_get(errors, seedPath) && _get(touched, seedPath)\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\t'Enter Seed Phrase for ' + activeAddress_o.nickname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'nope',\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\tname={seedPath}\n\t\t\t\t\t\t\t\t\trender={(msg) => (\n\t\t\t\t\t\t\t\t\t\t<div className={classes.errorText}>{msg}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{_get(values, entryCreditAmountPath) && isValid ? (\n\t\t\t\t\t\t\t<ConvertTransactionPreview\n\t\t\t\t\t\t\t\tnetworkProps={networkProps}\n\t\t\t\t\t\t\t\tecAmount={_get(values, entryCreditAmountPath)}\n\t\t\t\t\t\t\t\tfactoidAmount={\n\t\t\t\t\t\t\t\t\tthis.state.ecRate *\n\t\t\t\t\t\t\t\t\ttoFactoids(_get(values, entryCreditAmountPath))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsendFactoidFee={toFactoids(this.state.sendFactoshiFee)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{!_isNil(values.transactionError) && (\n\t\t\t\t\t\t\t<Typography className={classes.transactionErrorText}>\n\t\t\t\t\t\t\t\t{values.transactionError}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{isSubmitting ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{values.transactionID !== null ? (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Paper className={classes.transaction} elevation={2}>\n\t\t\t\t\t\t\t\t\t\t\t<CheckCircle\n\t\t\t\t\t\t\t\t\t\t\t\tnativeColor=\"#6fbf73\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.successIcon}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ display: 'inline' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Transaction ID:</b> {values.transactionID}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<TransactionMessage\n\t\t\t\t\t\t\t\t\t\t\t\ttransactionID={values.transactionID}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"outline\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tNew Transaction\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<CircularProgress thickness={7} />\n\t\t\t\t\t\t\t\t\t\t{values.ledgerStatus}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.sendButton}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{'Convert ' +\n\t\t\t\t\t\t\t\t\tnetworkProps.factoidAbbreviation +\n\t\t\t\t\t\t\t\t\t' to ' +\n\t\t\t\t\t\t\t\t\tnetworkProps.ecAbbreviation}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tPlease verify all details are correct before hitting send.\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tNobody can reverse mistaken transactions.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nfunction ECAddressMenu(props) {\n\tconst { values, setFieldValue, ecAddresses } = props;\n\n\tconst addressList = ecAddresses.map((address_o, index) => (\n\t\t<MenuItem\n\t\t\tkey={index}\n\t\t\tonClick={() => {\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\n\t\t\t\tsetFieldValue(recipientAddressPath, address_o.address);\n\t\t\t}}\n\t\t>\n\t\t\t{address_o.nickname}\n\t\t</MenuItem>\n\t));\n\treturn (\n\t\t<Menu\n\t\t\tid=\"simple-menu\"\n\t\t\tanchorEl={values[myFctWalletAnchorElPath]}\n\t\t\topen={Boolean(values[myFctWalletAnchorElPath])}\n\t\t\tonClose={() => {\n\t\t\t\tsetFieldValue(myFctWalletAnchorElPath, null);\n\t\t\t}}\n\t\t>\n\t\t\t{addressList}\n\t\t</Menu>\n\t);\n}\n\nConvertECForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = {\n\tsendButton: {\n\t\twidth: '50%',\n\t},\n\terrorText: { color: 'red', fontSize: '12px', textAlign: 'left' },\n\tpointer: {\n\t\tcursor: 'pointer',\n\t},\n\ttransactionErrorText: { color: 'red', fontSize: '16px' },\n\ttransaction: {\n\t\tborderColor: '#6fbf73',\n\t\tborderStyle: 'solid',\n\n\t\tpaddingTop: 3,\n\t\tpaddingBottom: 8,\n\t},\n\tsuccessIcon: {\n\t\tposition: 'relative',\n\t\ttop: '5px',\n\t},\n};\n\nconst enhancer = _flowRight(\n\twithNetwork,\n\twithLedger,\n\twithSeed,\n\twithWalletContext,\n\twithFactomCli,\n\twithStyles(styles)\n);\n\nexport default enhancer(ConvertECForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withSeed } from '../context/SeedContext';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport AddressInfoHeader from './shared/AddressInfoHeader';\nimport Typography from '@material-ui/core/Typography';\nimport Visibility from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormTextField from '../component/form/FormTextField';\n\n/**\n * Constants\n */\nconst privateKeyPath = 'privateKey';\nconst showPasswordPath = 'showPassword;';\nconst seedPath = 'seed';\n\nfunction ViewPrivateKeyForm(props) {\n\tfunction verifySeed(seed) {\n\t\tconst activeAddress_o = props.walletController.getActiveAddress();\n\t\treturn props.seedController.verifySeed(seed, activeAddress_o);\n\t}\n\n\tconst {\n\t\tclasses,\n\t\twalletController: { getActiveAddress },\n\t\tseedController: { getPrivateKey },\n\t} = props;\n\n\tconst activeAddress_o = getActiveAddress();\n\n\treturn (\n\t\t<Formik\n\t\t\tenableReinitialize\n\t\t\tinitialValues={{\n\t\t\t\t[privateKeyPath]: '',\n\t\t\t\t[seedPath]: '',\n\t\t\t\t[showPasswordPath]: false,\n\t\t\t\taddressToReinitialize: activeAddress_o.address,\n\t\t\t}}\n\t\t\tonSubmit={async (values, actions) => {\n\t\t\t\tconst { seed } = values;\n\t\t\t\ttry {\n\t\t\t\t\tconst mnemonic = seed.trim();\n\t\t\t\t\tconst privateKey = getPrivateKey(mnemonic, activeAddress_o);\n\t\t\t\t\tactions.setFieldValue(privateKeyPath, privateKey);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t}}\n\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t[seedPath]: Yup.string()\n\t\t\t\t\t.trim()\n\t\t\t\t\t.required('Required')\n\t\t\t\t\t.test(seedPath, 'Invalid Seed Phrase', verifySeed),\n\t\t\t})}\n\t\t\trender={({ isSubmitting, errors, touched, values, setFieldValue }) => (\n\t\t\t\t<Form\n\t\t\t\t\tautoComplete=\"nope\"\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t>\n\t\t\t\t\t<AddressInfoHeader />\n\t\t\t\t\t{_isEmpty(_get(values, privateKeyPath)) && (\n\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\tname={seedPath}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Seed Phrase\"\n\t\t\t\t\t\t\tplaceholder={'Enter Seed Phrase for ' + activeAddress_o.nickname}\n\t\t\t\t\t\t\terror={_get(errors, seedPath) && _get(touched, seedPath)}\n\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t{!_isEmpty(_get(values, privateKeyPath)) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tdata-cy=\"privateKey\"\n\t\t\t\t\t\t\t\tvariant=\"subtitle2\"\n\t\t\t\t\t\t\t\tstyle={{ fontSize: 15 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPrivate Key:&nbsp;\n\t\t\t\t\t\t\t\t{_get(values, privateKeyPath) && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{_get(values, showPasswordPath) ? (\n\t\t\t\t\t\t\t\t\t\t\t_get(values, privateKeyPath)\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Display Private Key\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(showPasswordPath, true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: 35 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\n\t\t\t\t\t{!isSubmitting && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.sendButton}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t/>\n\t);\n}\n\nViewPrivateKeyForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = {\n\tsendButton: {\n\t\twidth: '50%',\n\t},\n};\n\nconst enhancer = _flowRight(withSeed, withWalletContext, withStyles(styles));\n\nexport default enhancer(ViewPrivateKeyForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _get from 'lodash/get';\nimport { Formik, Form, Field } from 'formik';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport * as Yup from 'yup';\nimport { withWalletContext } from '../context/WalletContext';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CheckCircle from '@material-ui/icons/CheckCircleOutlined';\nimport FormTextField from '../component/form/FormTextField';\nimport { NICKNAME_MAX_LENGTH } from '../constants/WALLET_CONSTANTS';\n\n/**\n * Constants\n */\nconst CLEAR_SAVED_MS = 500;\nconst nicknamePath = 'nickname';\nconst oldNicknamePath = 'oldNickname';\nconst saveLocallyPath = 'saveLocally';\nconst deleteAnchorElPath = 'deleteAnchorEl';\nconst savedPath = 'saved';\n\nfunction AddressInfoForm(props) {\n\tconst {\n\t\tclasses,\n\t\twalletController: {\n\t\t\tgetActiveAddress,\n\t\t\tgetFactoidAddresses,\n\t\t\tgetEntryCreditAddresses,\n\t\t\tactiveAddressIndex_o,\n\t\t\tupdateAddress,\n\t\t\tdeleteAddress,\n\t\t},\n\t} = props;\n\n\tconst activeAddress_o = getActiveAddress();\n\n\tlet userAddressList = [];\n\tif (activeAddressIndex_o.type === 'fct') {\n\t\tuserAddressList = getFactoidAddresses();\n\t} else if (activeAddressIndex_o.type === 'ec') {\n\t\tuserAddressList = getEntryCreditAddresses();\n\t}\n\n\tconst userAddressNicknames = userAddressList\n\t\t.filter((addr_o) => addr_o.address !== activeAddress_o.address)\n\t\t.map((addr_o) => addr_o.nickname);\n\n\treturn (\n\t\t<Formik\n\t\t\tenableReinitialize\n\t\t\tinitialValues={{\n\t\t\t\t[saveLocallyPath]: activeAddress_o.saveLocally,\n\t\t\t\t[nicknamePath]: activeAddress_o.nickname,\n\t\t\t\t[oldNicknamePath]: activeAddress_o.nickname,\n\t\t\t\t[deleteAnchorElPath]: null,\n\t\t\t\t[savedPath]: false,\n\t\t\t}}\n\t\t\tonSubmit={(values, actions) => {\n\t\t\t\tactions.setFieldValue(savedPath, false);\n\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tupdateAddress(\n\t\t\t\t\t\tactiveAddressIndex_o,\n\t\t\t\t\t\t_get(values, nicknamePath).trim(),\n\t\t\t\t\t\t_get(values, saveLocallyPath)\n\t\t\t\t\t);\n\t\t\t\t\tactions.resetForm();\n\t\t\t\t\tactions.setFieldValue(savedPath, true);\n\t\t\t\t}, CLEAR_SAVED_MS);\n\t\t\t}}\n\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t[nicknamePath]: Yup.string()\n\t\t\t\t\t.trim()\n\t\t\t\t\t.required('Required')\n\t\t\t\t\t.test(\n\t\t\t\t\t\tnicknamePath,\n\t\t\t\t\t\t'Enter unique nickname',\n\t\t\t\t\t\t(value) => userAddressNicknames.indexOf(value) === -1\n\t\t\t\t\t),\n\t\t\t})}\n\t\t\trender={({\n\t\t\t\tisSubmitting,\n\t\t\t\terrors,\n\t\t\t\ttouched,\n\t\t\t\tvalues,\n\t\t\t\tsetFieldValue,\n\t\t\t\thandleChange,\n\t\t\t\tsubmitForm,\n\t\t\t\thandleBlur,\n\t\t\t}) => (\n\t\t\t\t<Form>\n\t\t\t\t\t<Grid container item xs={12} justify=\"space-between\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography display=\"inline\" variant=\"h6\">\n\t\t\t\t\t\t\t\tEdit Address\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t<CircularProgress size={20} className={classes.icon} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{_get(values, savedPath) && (\n\t\t\t\t\t\t\t\t<Typography display=\"inline\" style={{ color: 'green' }}>\n\t\t\t\t\t\t\t\t\t<CheckCircle className={classes.icon} />\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={12} className={classes.textAlignLeft}>\n\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\terrors[nicknamePath] && touched[nicknamePath] ? true : false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname={nicknamePath}\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetFieldValue(savedPath, false);\n\n\t\t\t\t\t\t\t\t\tsetFieldValue(oldNicknamePath, _get(values, nicknamePath));\n\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonBlur={async (e) => {\n\t\t\t\t\t\t\t\t\tawait handleBlur(e);\n\t\t\t\t\t\t\t\t\tif (e.target.value !== _get(values, oldNicknamePath)) {\n\t\t\t\t\t\t\t\t\t\tsubmitForm();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tlabel=\"Nickname\"\n\t\t\t\t\t\t\t\tmaxLength={NICKNAME_MAX_LENGTH}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container item xs={12} className={classes.pushDown}>\n\t\t\t\t\t\t\t<Grid item xs={6} className={classes.textAlignLeft}>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname={saveLocallyPath}\n\t\t\t\t\t\t\t\t\trender={({ field, form }) => (\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={async (e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait handleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubmitForm();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={saveLocallyPath}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={field.value}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Save to browser\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t<Tooltip title=\"Delete address\">\n\t\t\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\t\t\tclassName={classes.fab}\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ boxShadow: 'none', width: 35, height: 35 }}\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tif (!isSubmitting) {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, event.currentTarget);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<DeleteForever />\n\t\t\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\tid=\"simple-menu\"\n\t\t\t\t\t\t\t\t\tanchorEl={values[deleteAnchorElPath]}\n\t\t\t\t\t\t\t\t\topen={Boolean(values[deleteAnchorElPath])}\n\t\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, null);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tdeleteAddress(activeAddressIndex_o);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(deleteAnchorElPath, null);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.deleteConfirmationText}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tConfirm Delete\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t/>\n\t);\n}\n\nAddressInfoForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = () => ({\n\tdeleteButton: { marginLeft: 15 },\n\tdeleteConfirmationText: { color: 'red' },\n\ticon: {\n\t\tposition: 'relative',\n\t\ttop: '5px',\n\t\tleft: '6px',\n\t},\n\ttextAlignLeft: { textAlign: 'left' },\n\tfab: { backgroundColor: '#3f51b545' },\n\tpushDown: { paddingTop: '7px' },\n});\n\nconst enhancer = _flowRight(withWalletContext, withStyles(styles));\n\nexport default enhancer(AddressInfoForm);\n","import React from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport _isEmpty from 'lodash/isEmpty';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction TransactionList(props) {\n\tconst {\n\t\tclasses,\n\t\twalletController: { getActiveAddress },\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\tconst activeAddress_o = getActiveAddress();\n\n\treturn (\n\t\t<>\n\t\t\t{!_isEmpty(activeAddress_o.transactions) && (\n\t\t\t\t<>\n\t\t\t\t\t<Typography variant=\"h6\">Recent Transactions</Typography>\n\t\t\t\t\t{activeAddress_o.transactions.map(function(transaction, index) {\n\t\t\t\t\t\tconst href =\n\t\t\t\t\t\t\tnetworkProps.explorerURL +\n\t\t\t\t\t\t\tnetworkProps.transactionUrlSuffix +\n\t\t\t\t\t\t\ttransaction;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\tclassName={classes.transaction}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<b>Tx ID:</b> {transaction}{' '}\n\t\t\t\t\t\t\t\t<Tooltip title=\"Open Factom Explorer\">\n\t\t\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={href}>\n\t\t\t\t\t\t\t\t\t\t<OpenInNew color=\"primary\" style={{ fontSize: 15 }} />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nTransactionList.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\ttransaction: { overflowWrap: 'break-word' },\n});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\n\nexport default enhancer(TransactionList);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport AddressInfoForm from './AddressInfoForm';\nimport AddressInfoHeader from './shared/AddressInfoHeader';\nimport TransactionList from './TransactionList';\n\nconst AddressInfoTab = () => {\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<AddressInfoHeader />\n\t\t\t\t<br />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<AddressInfoForm />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<TransactionList />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default AddressInfoTab;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport _flowRight from 'lodash/flowRight';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport SendFactoidForm from './SendFactoidForm';\nimport ConvertECForm from './ConvertECForm';\nimport ViewPrivateKeyForm from './ViewPrivateKeyForm';\nimport AddressInfoTab from './AddressInfoTab';\nimport { withNetwork } from '../context/NetworkContext';\n\nfunction WalletTabContent(props) {\n\tconst [tabValue, setTabValue] = useState(0);\n\n\tfunction handleChange(event, tabValue) {\n\t\tsetTabValue(tabValue);\n\t}\n\n\tconst {\n\t\tclasses,\n\t\ttype,\n\t\tactiveAddress,\n\t\tnetworkController: { networkProps },\n\t} = props;\n\n\tlet activeTab = tabValue;\n\n\t// handle invalid FCT tab value\n\tif (type === 'fct' && activeTab >= 3 && activeAddress.importType !== 'seed') {\n\t\t//only seeds have tab 3\n\t\tactiveTab = 0;\n\t}\n\n\t// handle invalid EC tab value\n\tif (\n\t\ttype === 'ec' &&\n\t\t(activeTab > 1 || (activeTab === 1 && activeAddress.importType !== 'seed'))\n\t) {\n\t\tactiveTab = 0;\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{type === 'fct' && (\n\t\t\t\t<div>\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\tvalue={activeTab}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\t\tcentered\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tab label=\"Overview\" />\n\t\t\t\t\t\t<Tab label={'Send ' + networkProps.factoidAbbreviationFull} />\n\t\t\t\t\t\t<Tab label={'Convert to ' + networkProps.ecAbbreviation} />\n\t\t\t\t\t\t{activeAddress.importType === 'seed' && (\n\t\t\t\t\t\t\t<Tab label=\"View Private Key\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Tabs>\n\t\t\t\t\t{activeTab === 0 && (\n\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t<AddressInfoTab />\n\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t{activeTab === 1 && (\n\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t<SendFactoidForm />\n\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t{activeTab === 2 && (\n\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t<ConvertECForm />\n\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t{activeTab === 3 && (\n\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t<ViewPrivateKeyForm />\n\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{type === 'ec' && (\n\t\t\t\t<div>\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\tvalue={activeTab}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\t\tcentered\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tab label=\"Overview\" />\n\t\t\t\t\t\t{activeAddress.importType === 'seed' && (\n\t\t\t\t\t\t\t<Tab label=\"View Private Key\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Tabs>\n\t\t\t\t\t{activeTab === 0 && (\n\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t<AddressInfoTab />\n\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t{activeTab === 1 && (\n\t\t\t\t\t\t<TabContainer classes={classes}>\n\t\t\t\t\t\t\t<ViewPrivateKeyForm />\n\t\t\t\t\t\t</TabContainer>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\nWalletTabContent.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nfunction TabContainer(props) {\n\treturn (\n\t\t<Typography component=\"div\" className={props.classes.tabContainer}>\n\t\t\t{props.children}\n\t\t</Typography>\n\t);\n}\nTabContainer.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n};\n\nconst styles = {\n\troot: { textAlign: 'center' },\n\ttabContainer: {\n\t\tpaddingLeft: 55,\n\t\tpaddingRight: 55,\n\t\tpaddingTop: 18,\n\t\tpaddingBottom: 10,\n\t},\n};\n\nconst enhancer = _flowRight(withNetwork, withStyles(styles));\nexport default enhancer(WalletTabContent);\n","import React, { useEffect } from 'react';\nimport _isNil from 'lodash/isNil';\nimport Sidebar from './Sidebar.js';\nimport WalletTabContent from './WalletTabContent.js';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withWalletContext } from '../context/WalletContext';\n\nfunction WalletManager(props) {\n\tconst {\n\t\twalletController: {\n\t\t\tupdateBalances,\n\t\t\tgetActiveAddress,\n\t\t\tactiveAddressIndex_o,\n\t\t},\n\t} = props;\n\n\tuseEffect(() => {\n\t\tupdateBalances();\n\t}, [updateBalances]);\n\n\tconst activeAddress = getActiveAddress();\n\n\tif (!_isNil(activeAddress)) {\n\t\treturn (\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t<Grid item md={4} xs={12}>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item md={8} xs={12}>\n\t\t\t\t\t<Paper elevation={2}>\n\t\t\t\t\t\t<WalletTabContent\n\t\t\t\t\t\t\ttype={activeAddressIndex_o.type}\n\t\t\t\t\t\t\tactiveAddress={activeAddress}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t} else {\n\t\treturn <></>;\n\t}\n}\n\nexport default withWalletContext(WalletManager);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withWalletContext } from '../context/WalletContext';\nimport { withNetwork } from '../context/NetworkContext';\nimport AddWalletStepper from './AddWalletStepper';\n\nclass AddInitialWallet extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.setReadyToManageWallet(false);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tnetworkController: { networkProps },\n\t\t} = this.props;\n\n\t\tconst handleCloseText =\n\t\t\tnetworkProps.network === 'testnet'\n\t\t\t\t? 'Manage Testnet Wallet'\n\t\t\t\t: 'Manage Wallet';\n\n\t\treturn (\n\t\t\t<Grid container item xs={12} justify=\"center\">\n\t\t\t\t<AddWalletStepper\n\t\t\t\t\thandleClose={() => this.props.setReadyToManageWallet(true)}\n\t\t\t\t\thandleCloseText={handleCloseText}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\nAddInitialWallet.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({});\n\nconst enhancer = _flowRight(withNetwork, withWalletContext, withStyles(styles));\nexport default enhancer(AddInitialWallet);\n","import { Route, Switch } from 'react-router-dom';\nimport _flowRight from 'lodash/flowRight';\nimport React from 'react';\nimport { withWalletContext } from './context/WalletContext';\nimport WalletManager from './walletManager/WalletManager';\nimport AddInitialWallet from './addWallet/AddInitialWallet';\n\nfunction AppRouter(props) {\n\tconst {\n\t\twalletController: {\n\t\t\treadyToManageWallet,\n\t\t\tisWalletEmpty,\n\t\t\tsetReadyToManageWallet,\n\t\t},\n\t} = props;\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route\n\t\t\t\tpath=\"/\"\n\t\t\t\trender={() =>\n\t\t\t\t\treadyToManageWallet && !isWalletEmpty() ? (\n\t\t\t\t\t\t<WalletManager />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<AddInitialWallet setReadyToManageWallet={setReadyToManageWallet} />\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>\n\t\t</Switch>\n\t);\n}\n\nconst enhancer = _flowRight(withWalletContext);\n\nexport default enhancer(AppRouter);\n","import React, { Component } from 'react';\nimport _flowRight from 'lodash/flowRight';\nimport Header from './header/Header';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport withRootTheme from './withRootTheme';\nimport WalletController from './context/WalletController';\nimport SeedController from './context/SeedController';\nimport FactomCliController from './context/FactomCliController';\nimport NetworkController from './context/NetworkController';\nimport LedgerController from './context/LedgerController';\nimport Disclaimer from './Disclaimer';\nimport TestnetWarningBar from './TestnetWarningBar';\nimport AppRouter from './AppRouter';\n\nclass App extends Component {\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<NetworkController>\n\t\t\t\t\t<FactomCliController>\n\t\t\t\t\t\t<WalletController>\n\t\t\t\t\t\t\t<Disclaimer />\n\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t\t<SeedController>\n\t\t\t\t\t\t\t\t<LedgerController>\n\t\t\t\t\t\t\t\t\t<div className={classes.body}>\n\t\t\t\t\t\t\t\t\t\t<AppRouter />\n\t\t\t\t\t\t\t\t\t\t<TestnetWarningBar />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</LedgerController>\n\t\t\t\t\t\t\t</SeedController>\n\t\t\t\t\t\t</WalletController>\n\t\t\t\t\t</FactomCliController>\n\t\t\t\t</NetworkController>\n\t\t\t</Router>\n\t\t);\n\t}\n}\nApp.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nconst styles = (theme) => ({\n\tbody: {\n\t\twidth: '1200px',\n\t\tmargin: '0 auto',\n\t},\n});\n\nconst enhancer = _flowRight(withRootTheme, withStyles(styles));\n\nexport default enhancer(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { unregister } from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nunregister();\n"],"sourceRoot":""}